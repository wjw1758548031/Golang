[[query.other.froms.storage.form.list]]
select ROW_NUMBER() over(ORDER BY ta.id) row_num,
         ta.id storage_order_id,ta.storage_order_no,ta.from_supplier_id,ta.to_supplier_id,ta.apply_storage_id,ta.from_storage_id,ta.to_storage_id,
         ta.from_customer_id,ta.storage_action_type_id,ta.memo,ta.storage_order_status,ta.is_from_rcw,ta.is_to_rcw,
         ta.is_from_carry_over,ta.is_to_carry_over,ta.from_carry_over_log_id,ta.to_carry_over_log_id,
         ta.from_carry_over_time,ta.to_carry_over_time,ta.create_account_id,
         ta.update_account_id,ta.create_time,ta.update_time,ta.finish_time,ta.out_time,ta.in_time,ta.storage_order_sub_no,
           s3.name apply_storage_name,
           c3.name from_customer_name,
           s2.name from_storage_name,
           c.id customer_id,
           c.name customer_name,
           c2.id parent_customer_id,
           c2.name parent_customer_name,
           sat.name storage_action_type_desc,
           tcg.name category_name,
           tsf.name specification_name,
           u1.name unit_name,
           ta.recipients_department,
           tb.recipient,
             CASE
                   WHEN ta.storage_order_status = 3 THEN '待中心审核'
                   WHEN ta.storage_order_status = 5 THEN '待仓库调拨'
                   WHEN ta.storage_order_status = 7 THEN '待出库'
                   WHEN ta.storage_order_status = 8 THEN '待入库'
                   WHEN ta.storage_order_status = 11 THEN '已完成'
                   WHEN ta.storage_order_status = 12 THEN '采购已完成'
                   WHEN ta.storage_order_status = 13 THEN '已关闭'
                   WHEN ta.storage_order_status = 14 THEN '采购已完成'
                   WHEN ta.storage_order_status = 15 THEN '采购已完成'
                   ELSE '已审核' END storage_order_status_desc,
                   (select case when tb.out_amount + coalesce(t.amount,0) = 0 and t.amount notnull then 1 when  t.amount isnull and ta.is_from_rcw=false then 4 when ta.is_from_rcw=true then 3 else 2 end   from  (select sum(sod.out_amount) amount from t_rcw_log rl
                               inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
                               inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
                               where rl.storage_order_id = ta.id and rl.status = 1 and rl.action_type = 2
                               ) t) is_rcw,
           (select name from T_STORAGE where id=ta.to_storage_id) to_storage_name,
            (select name from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE where id=ta.to_storage_id)) to_customer_name,
            (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=ta.TO_STORAGE_ID))) as to_parent_customer_name,
            (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=ta.FROM_STORAGE_ID))) as from_parent_customer_name,
            (select NAME  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.apply_storage_id)) apply_customer_name,
            CASE
                  WHEN ta.storage_order_status = 7 THEN '1'
                  ELSE '2' END      operate_status,
                  go.id goods_id,go.name goods_name,go.goods_code,go.unit,
                    CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
                    CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
                  tb.require_amount,
                  tb.price,
                  tb.out_amount,tb.in_amount,
                  tb.memo detail_memo
from T_STORAGE_ORDER ta
 LEFT JOIN t_storage_order_detail tb on ta.id=tb.storage_order_id and tb.status=1
 LEFT JOIN t_goods go on go.id=tb.goods_id
 left join t_storage s3 on ta.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on ta.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on ta.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on ta.from_customer_id = c3.id
    left join t_storage_action_type sat on ta.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=ta.storage_order_status
    LEFT JOIN t_category tcg on tcg.id = tb.category_id
    LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
     LEFT JOIN t_unit u1 on u1.id = tb.unit_id
  where
(ta.FROM_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                               where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.FROM_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                               inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                where account_id = ?account_id)
  and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
and ta.storage_action_type_id in (select id from t_storage_action_type where type=2 and condition=2  and status!=3 )
and ta.FROM_STORAGE_ID!=''
{% if !start_put_out_time.IsZero() %}
   and  ta.OUT_TIME >= to_timestamp(?start_put_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_out_time.IsZero() %}
   and  ta.OUT_TIME <= to_timestamp(?end_put_out_time,'YYYY-MM-DD hh24:mi:ss') and ta.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_put_in_time.IsZero() %}
   and  ta.IN_TIME >= to_timestamp(?start_put_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_in_time.IsZero() %}
   and  ta.IN_TIME <= to_timestamp(?end_put_in_time,'YYYY-MM-DD hh24:mi:ss')  and ta.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  ta.storage_order_status=?storage_order_status
{% endif%}
{% if storage_action_type_id %}
   and  ta.storage_action_type_id=?storage_action_type_id
{% endif%}
{% if storage_id %}
   and  ta.FROM_STORAGE_ID=?storage_id
{% endif%}
{% if customer_id!="" %}
  and   ta.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if keyword!="" %}
   and  (ta.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' or  ta.STORAGE_ORDER_SUB_NO ilike '%' || ?keyword || '%' or  go.name ilike '%' || ?keyword || '%' or  go.goods_code ilike '%' || ?keyword || '%')
{% endif%}
order by cast(ta.id as integer) desc
limit ?page_size offset (?page_num - 1) * ?page_size




[[query.other.froms.storage.form.cnt]]
select count(1) cnt
from T_STORAGE_ORDER ta
 LEFT JOIN t_storage_order_detail tb on ta.id=tb.storage_order_id and tb.status=1
 LEFT JOIN t_goods go on go.id=tb.goods_id
 left join t_storage s3 on ta.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on ta.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on ta.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on ta.from_customer_id = c3.id
    left join t_storage_action_type sat on ta.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=ta.storage_order_status
  where
(ta.FROM_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.FROM_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
       inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
       where account_id = ?account_id)
  and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
and ta.storage_action_type_id in (select id from t_storage_action_type where type=2 and condition=2  and status!=3 )
and ta.FROM_STORAGE_ID!=''
{% if !start_put_out_time.IsZero() %}
   and  ta.OUT_TIME >= to_timestamp(?start_put_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_out_time.IsZero() %}
   and  ta.OUT_TIME <= to_timestamp(?end_put_out_time,'YYYY-MM-DD hh24:mi:ss')  and ta.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_put_in_time.IsZero() %}
   and  ta.IN_TIME >= to_timestamp(?start_put_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_in_time.IsZero() %}
   and  ta.IN_TIME <= to_timestamp(?end_put_in_time,'YYYY-MM-DD hh24:mi:ss')  and ta.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  ta.storage_order_status=?storage_order_status
{% endif%}
{% if storage_action_type_id %}
   and  ta.storage_action_type_id=?storage_action_type_id
{% endif%}
{% if storage_id %}
   and  ta.FROM_STORAGE_ID=?storage_id
{% endif%}
{% if customer_id!="" %}
  and   ta.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if keyword!="" %}
   and  (ta.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' or  ta.STORAGE_ORDER_SUB_NO ilike '%' || ?keyword || '%' or  go.name ilike '%' || ?keyword || '%' or  go.goods_code ilike '%' || ?keyword || '%')
{% endif%}


[[query.to.storage.list]]
select ROW_NUMBER() over(ORDER BY ta.id) row_num,
         ta.id storage_order_id,ta.storage_order_no,ta.from_supplier_id,ta.to_supplier_id,ta.apply_storage_id,ta.from_storage_id,ta.to_storage_id,
         ta.from_customer_id,ta.storage_action_type_id,ta.memo,ta.storage_order_status,ta.is_from_rcw,ta.is_to_rcw,
         ta.is_from_carry_over,ta.is_to_carry_over,ta.from_carry_over_log_id,ta.to_carry_over_log_id,
         ta.from_carry_over_time,ta.to_carry_over_time,ta.create_account_id,
         ta.update_account_id,ta.create_time,ta.update_time,ta.finish_time,ta.out_time,ta.in_time,ta.storage_order_sub_no,
         tcg.name category_name,
         tsf.name specification_name,
         u1.name unit_name,
           s3.name apply_storage_name,
           c3.name from_customer_name,
           s2.name from_storage_name,
           c.id customer_id,
           c.name customer_name,
           c2.id parent_customer_id,
           c2.name parent_customer_name,
           sat.name storage_action_type_desc,
             CASE
                   WHEN ta.storage_order_status = 3 THEN '待中心审核'
                   WHEN ta.storage_order_status = 5 THEN '待仓库调拨'
                   WHEN ta.storage_order_status = 7 THEN '待出库'
                   WHEN ta.storage_order_status = 8 THEN '待入库'
                   WHEN ta.storage_order_status = 11 THEN '已完成'
                   WHEN ta.storage_order_status = 12 THEN '采购已完成'
                   WHEN ta.storage_order_status = 13 THEN '已关闭'
                   WHEN ta.storage_order_status = 14 THEN '采购已完成'
                   WHEN ta.storage_order_status = 15 THEN '采购已完成'
                   ELSE '已审核' END storage_order_status_desc,
         (select case when tb.in_amount + coalesce(t.amount,0) = 0 and t.amount notnull then 1 when  t.amount isnull and ta.is_to_rcw=false then 4 when ta.is_to_rcw=true then 3 else 2 end   from  (select sum(sod.in_amount) amount from t_rcw_log rl
             inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
             inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
             where rl.storage_order_id = ta.id and rl.status = 1 and rl.action_type = 1
             ) t) is_rcw,
           (select name from T_STORAGE where id=ta.to_storage_id) to_storage_name,
            (select name from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE where id=ta.to_storage_id)) to_customer_name,
            (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=ta.TO_STORAGE_ID))) as to_parent_customer_name,
            (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=ta.FROM_STORAGE_ID))) as from_parent_customer_name,
            (select NAME  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.apply_storage_id)) apply_customer_name,
             CASE
                              WHEN ta.storage_order_status = 8 THEN '1'
                              ELSE '2' END      operate_status,
            go.id goods_id,go.name goods_name,go.goods_code,
                go.unit,
                 CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
                 CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
               tb.require_amount
               ,tb.price,
               tb.out_amount,tb.in_amount,
               tb.memo detail_memo
from T_STORAGE_ORDER ta
 LEFT JOIN t_storage_order_detail tb on ta.id=tb.storage_order_id and tb.status=1
 LEFT JOIN t_goods go on go.id=tb.goods_id
 left join t_storage s3 on ta.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on ta.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on ta.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on ta.from_customer_id = c3.id
    left join t_storage_action_type sat on ta.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=ta.storage_order_status
    LEFT JOIN t_category tcg on tcg.id = tb.category_id
    LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
     LEFT JOIN t_unit u1 on u1.id = tb.unit_id
  where
(ta.TO_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.TO_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                              where account_id = ?account_id)
  and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
and ta.STORAGE_ACTION_TYPE_ID='2' and ta.storage_order_status != 7 and ta.storage_order_status != 13
and ta.TO_STORAGE_ID!=''
{% if !start_put_out_time.IsZero() %}
   and  ta.OUT_TIME >= to_timestamp(?start_put_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_out_time.IsZero() %}
   and  ta.OUT_TIME <= to_timestamp(?end_put_out_time,'YYYY-MM-DD hh24:mi:ss')  and ta.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_put_in_time.IsZero() %}
   and  ta.IN_TIME >= to_timestamp(?start_put_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_in_time.IsZero() %}
   and  ta.IN_TIME <= to_timestamp(?end_put_in_time,'YYYY-MM-DD hh24:mi:ss')  and ta.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  ta.storage_order_status=?storage_order_status
{% endif%}
{% if customer_id!="" %}
  and   ta.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if keyword!="" %}
   and  ta.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' or  ta.STORAGE_ORDER_SUB_NO ilike '%' || ?keyword || '%'
{% endif%}
order by cast(ta.id as integer) desc
limit ?page_size offset (?page_num - 1) * ?page_size



[[query.to.storage.cnt]]
select count(1) cnt
from T_STORAGE_ORDER ta
LEFT JOIN t_storage_order_detail tb on ta.id=tb.storage_order_id and tb.status=1
 LEFT JOIN t_goods go on go.id=tb.goods_id
 left join t_storage s3 on ta.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on ta.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on ta.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on ta.from_customer_id = c3.id
    left join t_storage_action_type sat on ta.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=ta.storage_order_status
  where
(ta.TO_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.TO_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                              where account_id = ?account_id)
 and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
and ta.STORAGE_ACTION_TYPE_ID='2' and ta.storage_order_status != 7 and ta.storage_order_status != 13
and ta.TO_STORAGE_ID!=''
{% if !start_put_out_time.IsZero() %}
   and  ta.OUT_TIME >= to_timestamp(?start_put_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_out_time.IsZero() %}
   and  ta.OUT_TIME <= to_timestamp(?end_put_out_time,'YYYY-MM-DD hh24:mi:ss') and ta.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_put_in_time.IsZero() %}
   and  ta.IN_TIME >= to_timestamp(?start_put_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_in_time.IsZero() %}
   and  ta.IN_TIME <= to_timestamp(?end_put_in_time,'YYYY-MM-DD hh24:mi:ss') and ta.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  ta.storage_order_status=?storage_order_status
{% endif%}
{% if customer_id!="" %}
  and   ta.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if keyword!="" %}
   and  ta.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' or  ta.STORAGE_ORDER_SUB_NO ilike '%' || ?keyword || '%'
{% endif%}

[[query.froms.storage.form.list]]
with item AS (
  select storage_id,goods_id,sum(STOCK_NUM) stock_num from  T_STORAGE_GOODS_STOCK
  where status=1 and TYPE=1
  GROUP BY storage_id,goods_id
)
select ROW_NUMBER() over(ORDER BY ta.id) row_num,
  ta.id storage_order_id,ta.storage_order_no,ta.from_supplier_id,ta.to_supplier_id,ta.apply_storage_id,ta.from_storage_id,ta.to_storage_id,
  ta.from_customer_id,ta.storage_action_type_id,ta.memo,ta.storage_order_status,ta.is_from_rcw,ta.is_to_rcw,
  ta.is_from_carry_over,ta.is_to_carry_over,ta.from_carry_over_log_id,ta.to_carry_over_log_id,
  ta.from_carry_over_time,ta.to_carry_over_time,ta.create_account_id,
  ta.update_account_id,ta.create_time,ta.update_time,ta.finish_time,ta.out_time,ta.in_time,ta.storage_order_sub_no,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.name from_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    sat.name storage_action_type_desc,
    tcg.name category_name,
    tsf.name specification_name,
    u1.name unit_name,
      CASE
        WHEN ta.storage_order_status = 3 THEN '待中心审核'
        WHEN ta.storage_order_status = 5 THEN '待仓库调拨'
        WHEN ta.storage_order_status = 7 THEN '待出库'
        WHEN ta.storage_order_status = 8 THEN '待入库'
        WHEN ta.storage_order_status = 11 THEN '已完成'
        WHEN ta.storage_order_status = 12 THEN '采购已完成'
        WHEN ta.storage_order_status = 13 THEN '已关闭'
        WHEN ta.storage_order_status = 14 THEN '采购已完成'
        WHEN ta.storage_order_status = 15 THEN '采购已完成'
        ELSE '已审核' END storage_order_status_desc,
           (select case when tb.out_amount + coalesce(t.amount,0) = 0 and t.amount notnull then 1 when  t.amount isnull and ta.is_from_rcw=false then 4 when ta.is_from_rcw=true then 3 else 2 end   from  (select sum(sod.out_amount) amount from t_rcw_log rl
            inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
            inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
            where rl.storage_order_id = ta.id and rl.status = 1 and rl.action_type = 2
            ) t) is_rcw,
    (select name from T_STORAGE where id=ta.to_storage_id) to_storage_name,
     (select name from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE where id=ta.to_storage_id)) to_customer_name,
     (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=ta.TO_STORAGE_ID))) as to_parent_customer_name,
     (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=ta.FROM_STORAGE_ID))) as from_parent_customer_name,
     (select NAME  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.apply_storage_id)) apply_customer_name,
      CASE
      WHEN ta.storage_order_status = 7 THEN '1'
      ELSE '2' END      operate_status,
       go.id goods_id,go.name goods_name,go.goods_code,go.unit,
       CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
       CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
            tb.require_amount,
            tb.price,
            COALESCE(sto.stock_num,0),
            tb.out_amount,  CASE WHEN tb.in_amount = -1 THEN 0 ELSE tb.in_amount END in_amount,
            tb.memo detail_memo
from T_STORAGE_ORDER ta
LEFT JOIN t_storage_order_detail tb on ta.id=tb.storage_order_id and tb.status=1
 LEFT JOIN t_goods go on go.id=tb.goods_id
 LEFT JOIN item  sto on sto.goods_id=tb.goods_id and sto.storage_id=ta.from_storage_id
 left join t_storage s3 on ta.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on ta.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on ta.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on ta.from_customer_id = c3.id
    left join t_storage_action_type sat on ta.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=ta.storage_order_status
    LEFT JOIN t_category tcg on tcg.id = tb.category_id
    LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
    LEFT JOIN t_unit u1 on u1.id = tb.unit_id
  where
(ta.FROM_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.FROM_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                              where account_id = ?account_id)
 and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
and ta.STORAGE_ACTION_TYPE_ID in ('2','11')
and ta.FROM_STORAGE_ID!=''
{% if !start_put_out_time.IsZero() %}
   and  ta.OUT_TIME >= to_timestamp(?start_put_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_out_time.IsZero() %}
   and  ta.OUT_TIME <= to_timestamp(?end_put_out_time,'YYYY-MM-DD hh24:mi:ss')and ta.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_put_in_time.IsZero() %}
   and  ta.IN_TIME >= to_timestamp(?start_put_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_in_time.IsZero() %}
   and  ta.IN_TIME <= to_timestamp(?end_put_in_time,'YYYY-MM-DD hh24:mi:ss')  and ta.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  ta.storage_order_status=?storage_order_status
{% endif%}
{% if customer_id!="" %}
  and   ta.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if keyword!="" %}
   and  ta.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' or  ta.STORAGE_ORDER_SUB_NO ilike '%' || ?keyword || '%'
{% endif%}
order by cast(ta.id as integer) desc
limit ?page_size offset (?page_num - 1) * ?page_size



[[query.froms.storage.form.cnt]]
with item AS (
  select storage_id,goods_id,sum(STOCK_NUM) stock_num from  T_STORAGE_GOODS_STOCK
  where status=1 and TYPE=1
  GROUP BY storage_id,goods_id
)
select count(1) cnt
from T_STORAGE_ORDER ta
 LEFT JOIN t_storage_order_detail tb on ta.id=tb.storage_order_id and tb.status=1
 LEFT JOIN t_goods go on go.id=tb.goods_id
 LEFT JOIN item  sto on sto.goods_id=tb.goods_id and sto.storage_id=ta.from_storage_id
 left join t_storage s3 on ta.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on ta.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on ta.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on ta.from_customer_id = c3.id
    left join t_storage_action_type sat on ta.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=ta.storage_order_status
  where
(ta.FROM_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.FROM_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                              where account_id = ?account_id)
  and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
and ta.STORAGE_ACTION_TYPE_ID in ('2','11')
and ta.FROM_STORAGE_ID!=''
{% if !start_put_out_time.IsZero() %}
   and  ta.OUT_TIME >= to_timestamp(?start_put_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_out_time.IsZero() %}
   and  ta.OUT_TIME <= to_timestamp(?end_put_out_time,'YYYY-MM-DD hh24:mi:ss')  and ta.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_put_in_time.IsZero() %}
   and  ta.IN_TIME >= to_timestamp(?start_put_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_put_in_time.IsZero() %}
   and  ta.IN_TIME <= to_timestamp(?end_put_in_time,'YYYY-MM-DD hh24:mi:ss')  and ta.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  ta.storage_order_status=?storage_order_status
{% endif%}
{% if customer_id!="" %}
  and   ta.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if keyword!="" %}
   and  ta.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' or  ta.STORAGE_ORDER_SUB_NO ilike '%' || ?keyword || '%'
{% endif%}


[[query.shipping.storage.order.cnt]]
select count(*) cnt
from t_storage_order so
    LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
    LEFT JOIN t_goods go on go.id=tb.goods_id and go.status=1
    left JOIN t_order orde on orde.id=tb.ref_order_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_supplier sp on sp.id = so.from_supplier_id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id = '4' and so.to_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
        select customer_id from t_account_child_customer where account_id = ?account_id
        {% if customer_id!="" %}
           and customer_id=?customer_id
        {% endif%}
    ) and status = 1
) AND (s.storage_type_id in (SELECT storage_type_id FROM t_acct_role_storage_type_priv WHERE account_id = ?account_id AND status= 1)
   or (SELECT id FROM t_role WHERE role_code='cst_super_admin') IN (SELECT role_id FROM t_acct_role WHERE account_id = ?account_id)
   )
{% if supplier_id!="" %}
   and so.from_supplier_id=?supplier_id
{% endif%}
{% if !start_put_in_time.IsZero() %}
and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_in_time.IsZero() %}
and so.in_time<to_date(?end_put_in_time,'YYYY-MM-DD')+1
{% endif%}
{% if keyword!="" %}
   and  so.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}

[[query.shipping.storage.order.list]]
select so.*,
    so.id storage_order_id,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.name from_storage_name,
    s.name to_storage_name,
    c.name customer_name,
    c2.name parent_customer_name,
    sp.name from_supplier_name,
    mm.meta_desc storage_order_status_desc,
    go.main_pic_url,
    tcg.name category_name,
    tsf.name specification_name,
     u1.name unit_name,
     (select case when tb.in_amount + coalesce(t.amount,0) = 0 and t.amount notnull then 1 when  t.amount isnull and so.is_to_rcw=false then 4 when so.is_to_rcw=true then 3 else 2 end   from  (select sum(sod.in_amount) amount from t_rcw_log rl
         inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
         inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
         where rl.storage_order_id = so.id and rl.status = 1 and rl.action_type = 1
         ) t) is_rcw,
    CASE WHEN so.storage_order_status = 8 THEN 1 ELSE 2 END operate_status,
     go.id goods_id,go.name goods_name,
          go.unit,
    CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
    CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
        tb.require_amount,
        tb.in_amount * tb.price in_total_price,
        tb.out_amount * tb.price out_total_price,
            tb.in_amount,tb.price,go.goods_code goods_code,
            case
                          when tb.in_amount != -1     then  tb.out_amount*tb.price/100
                          when tb.out_amount != -1     then  tb.in_amount*tb.price/100
                          else tb.require_amount*tb.price/100 end    total,
            supp.id supplier_id,supp.name supplier_name,
            orde.order_time,
            tb.out_amount,tb.in_amount,
            tb.memo detail_memo,
            appc.name apply_customer_name
from t_storage_order so
    LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
    LEFT JOIN t_goods go on go.id=tb.goods_id and go.status=1
    left JOIN t_order orde on orde.id=tb.ref_order_id
    left join t_supplier supp on supp.id=orde.supplier_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage app on app.id = so.APPLY_STORAGE_ID
    left join t_customer appc on app.customer_id = appc.id
    left join t_supplier sp on sp.id = so.from_supplier_id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
    LEFT JOIN t_category tcg on tcg.id = tb.category_id
    LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
    LEFT JOIN t_unit u1 ON u1.id = tb.unit_id
where  so.storage_action_type_id = '4' and so.to_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
        select c.id from t_account_child_customer acc
        inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
         where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
) AND (s.storage_type_id in (SELECT storage_type_id FROM t_acct_role_storage_type_priv WHERE account_id = ?account_id AND status= 1)
   or (SELECT id FROM t_role WHERE role_code='cst_super_admin') IN (SELECT role_id FROM t_acct_role WHERE account_id = ?account_id)
   )
{% if supplier_id!="" %}
   and so.supplier_id=?supplier_id
{% endif%}
{% if !start_put_in_time.IsZero() %}
and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_in_time.IsZero() %}
and so.in_time<to_date(?end_put_in_time,'YYYY-MM-DD')+1
{% endif%}
{% if keyword!="" %}
   and  so.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}

order by so.create_time desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.remote.in.storage.order.cnt]]
select
    count(*) cnt
from t_storage_order so
    LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
    LEFT JOIN t_goods go on go.id=tb.goods_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id in ('1','7') and so.to_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
        select c.id from t_account_child_customer acc
              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
              where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
) AND (s.storage_type_id in (SELECT storage_type_id FROM t_acct_role_storage_type_priv WHERE account_id = ?account_id AND status= 1)
   or (SELECT id FROM t_role WHERE role_code='cst_super_admin') IN (SELECT role_id FROM t_acct_role WHERE account_id = ?account_id)
   )
{% if !start_put_in_time.IsZero() %}
and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_in_time.IsZero() %}
and so.in_time<to_date(?end_put_in_time,'YYYY-MM-DD')+1
{% endif%}
{% if !start_put_out_time.IsZero() %}
and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_out_time.IsZero() %}
and so.out_time<to_date(?end_put_out_time,'YYYY-MM-DD')+1
{% endif%}
{% if storage_order_status !=0 %}
and so.storage_order_status = ?storage_order_status
{% endif%}
{% if keyword!="" %}
   and  so.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}

[[query.remote.in.storage.order.list]]
select so.*,
    so.id storage_order_id,
    s3.id apply_storage_id,
    s3.name apply_storage_name,
    c4.name apply_customer_name,
    c3.name from_customer_name,
    s2.id from_storage_id,
    s2.name from_storage_name,
    s.id to_storage_id,
    s.name to_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    mm.meta_desc storage_order_status_desc,
    tcg.name category_name,
    tsf.name specification_name,
    u1.name require_unit_name,
    u2.name unit_name,
  (select case when tb.in_amount + coalesce(t.amount,0) = 0 and t.amount notnull then 1 when  t.amount isnull and so.is_to_rcw=false then 4 when so.is_to_rcw=true then 3 else 2 end   from  (select sum(sod.in_amount) amount from t_rcw_log rl
             inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
             inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
             where rl.storage_order_id = so.id and rl.status = 1 and rl.action_type = 1
             ) t) is_rcw,
    CASE WHEN so.storage_order_status = 8 THEN 1
        ELSE 2 END operate_status,
          go.id goods_id,go.name goods_name,
              go.unit,
            CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
            CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
              tb.require_amount,
                tb.price,
                go.goods_code,
                tb.out_amount,tb.in_amount,
                tb.memo detail_memo
from t_storage_order so
     LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
     LEFT JOIN t_goods go on go.id=tb.goods_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_customer c4 on c4.id = s3.customer_id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
    LEFT JOIN t_category tcg on tcg.id = tb.category_id
    LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
    LEFT JOIN t_unit u1 on u1.id = tb.require_unit_id
    LEFT JOIN t_unit u2 on u2.id = tb.unit_id
where so.storage_action_type_id in ('1','7') and so.to_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
         select c.id from t_account_child_customer acc
               inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
               where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)  AND (s.storage_type_id in (SELECT storage_type_id FROM t_acct_role_storage_type_priv WHERE account_id = ?account_id AND status= 1)
     or (SELECT id FROM t_role WHERE role_code='cst_super_admin') IN (SELECT role_id FROM t_acct_role WHERE account_id = ?account_id)
     )
{% if !start_put_in_time.IsZero() %}
and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_in_time.IsZero() %}
and so.in_time<to_date(?end_put_in_time,'YYYY-MM-DD')+1
{% endif%}
{% if !start_put_out_time.IsZero() %}
and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_out_time.IsZero() %}
and so.out_time<to_date(?end_put_out_time,'YYYY-MM-DD')+1
{% endif%}
{% if storage_order_status !=0 %}
and so.storage_order_status = ?storage_order_status
{% endif%}
{% if keyword!="" %}
   and  so.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}
order by so.create_time desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.remote.out.storage.order.cnt]]
select
    count(*) cnt
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id = '1' and so.from_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
        select c.id from t_account_child_customer acc
              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
              where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)
{% if !start_put_out_time.IsZero() %}
and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_out_time.IsZero() %}
and so.out_time<to_date(?end_put_out_time,'YYYY-MM-DD')+1
{% endif%}

[[query.remote.out.storage.order.list]]
select so.*,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.name from_storage_name,
    s.name to_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    mm.meta_desc storage_order_status_desc
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id = '1' and so.from_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
         select c.id from t_account_child_customer acc
               inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
               where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)
{% if !start_put_out_time.IsZero() %}
and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_out_time.IsZero() %}
and so.out_time<to_date(?end_put_out_time,'YYYY-MM-DD')+1
{% endif%}
order by so.create_time desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.other.out.storage.order.cnt]]
select
    count(*) cnt
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id in (select id from t_storage_action_type where type=2 and condition=2 and status=1) and so.from_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
         select c.id from t_account_child_customer acc
               inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
               where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)
{% if !start_put_out_time.IsZero() %}
and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_out_time.IsZero() %}
and so.out_time<to_date(?end_put_out_time,'YYYY-MM-DD')+1
{% endif%}

[[query.other.out.storage.order.list]]
select so.*,
    s3.id apply_storage_id,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.id from_storage_id,
    s2.name from_storage_name,
    s.id to_storage_id,
    s.name to_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    sat.name storage_action_type_desc,
    mm.meta_desc storage_order_status_desc
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id in (select id from t_storage_action_type where type=2 and condition=2 and status=1) and so.from_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
        select c.id from t_account_child_customer acc
              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
              where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)
{% if !start_put_out_time.IsZero() %}
and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_out_time.IsZero() %}
and so.out_time<to_date(?end_put_out_time,'YYYY-MM-DD')+1
{% endif%}
order by so.create_time desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.other.in.storage.order.cnt]]
select count(*) cnt
from t_storage_order so
 LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
     LEFT JOIN t_goods go on go.id=tb.goods_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id in (select id from t_storage_action_type where type=3 and condition=2 and status!=3) and so.to_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
        select c.id from t_account_child_customer acc
              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
              where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
) AND (s.storage_type_id in (SELECT storage_type_id FROM t_acct_role_storage_type_priv WHERE account_id = ?account_id AND status= 1)
   or (SELECT id FROM t_role WHERE role_code='cst_super_admin') IN (SELECT role_id FROM t_acct_role WHERE account_id = ?account_id)
   )
{% if storage_order_status !=0 %}
and so.storage_order_status = ?storage_order_status
{% endif%}
{% if !start_put_in_time.IsZero() %}
and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_in_time.IsZero() %}
and so.in_time<to_date(?end_put_in_time,'YYYY-MM-DD')+1
{% endif%}
{% if keyword!="" %}
   and  so.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}

[[query.other.in.storage.order.list]]
select so.*,
    so.id storage_order_id,
    s3.id apply_storage_id,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.id from_storage_id,
    s2.name from_storage_name,
    s.id to_storage_id,
    s.name to_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    sat.name storage_action_type_desc,
    mm.meta_desc storage_order_status_desc,
    tcg.name category_name,
    tsf.name specification_name,
    u1.name unit_name,
      (select case when tb.in_amount + coalesce(t.amount,0) = 0 and t.amount notnull then 1 when  t.amount isnull and so.is_to_rcw=false then 4 when so.is_to_rcw=true then 3 else 2 end   from  (select sum(sod.in_amount) amount from t_rcw_log rl
       inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
      inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
    where rl.storage_order_id = so.id and rl.status = 1 and rl.action_type = 1
   ) t) is_rcw,
    CASE WHEN so.storage_order_status = 8 THEN 1
        ELSE 2 END operate_status,
         go.id goods_id,go.name goods_name,
              go.unit,
            CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
            CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
              tb.require_amount,
                tb.price,go.goods_code,
                tb.out_amount,tb.in_amount,
                tb.memo detail_memo
from t_storage_order so
    LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
     LEFT JOIN t_goods go on go.id=tb.goods_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
    LEFT JOIN t_category tcg on tcg.id = tb.category_id
    LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
    LEFT JOIN t_unit u1 on u1.id = tb.unit_id
where so.storage_action_type_id in (select id from t_storage_action_type where type=3 and condition=2  and status!=3 ) and so.to_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
         select c.id from t_account_child_customer acc
               inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
               where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
) AND (s.storage_type_id in (SELECT storage_type_id FROM t_acct_role_storage_type_priv WHERE account_id = ?account_id AND status= 1)
   or (SELECT id FROM t_role WHERE role_code='cst_super_admin') IN (SELECT role_id FROM t_acct_role WHERE account_id = ?account_id)
   )
{% if storage_order_status !=0 %}
and so.storage_order_status = ?storage_order_status
{% endif%}
{% if !start_put_in_time.IsZero() %}
and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_in_time.IsZero() %}
and so.in_time<to_date(?end_put_in_time,'YYYY-MM-DD')+1
{% endif%}
{% if keyword!="" %}
   and  so.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}
order by so.create_time desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.recycle.in.storage.order.cnt]]
select count(1) cnt
from t_storage_order so
    LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
    LEFT JOIN t_goods go on go.id=tb.goods_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
where so.storage_action_type_id in ('3','6') and so.storage_order_status != 7
and (so.TO_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or so.TO_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                              where account_id = ?account_id)
  and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
{% if customer_id!="" %}
  and   so.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if !start_recycle_out_time.IsZero() %}
   and  so.OUT_TIME >= to_timestamp(?start_recycle_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_recycle_out_time.IsZero() %}
   and  so.OUT_TIME <= to_timestamp(?end_recycle_out_time,'YYYY-MM-DD hh24:mi:ss') and so.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_recycle_in_time.IsZero() %}
   and  so.IN_TIME >= to_timestamp(?start_recycle_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_recycle_in_time.IsZero() %}
   and  so.IN_TIME <= to_timestamp(?end_recycle_in_time,'YYYY-MM-DD hh24:mi:ss') and so.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  so.storage_order_status=?storage_order_status
{% endif%}
{% if keyword!="" %}
   and  so.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' or  so.STORAGE_ORDER_SUB_NO ilike '%' || ?keyword || '%'
{% endif%}


[[query.recycle.in.storage.order.list]]
select ROW_NUMBER() over(ORDER BY so.id) row_num,
         so.id storage_order_id,so.storage_order_no,so.from_supplier_id,so.to_supplier_id,so.apply_storage_id,so.from_storage_id,so.to_storage_id,
         so.from_customer_id,so.storage_action_type_id,so.memo,so.storage_order_status,so.is_from_rcw,so.is_to_rcw,
         so.is_from_carry_over,so.is_to_carry_over,so.from_carry_over_log_id,so.to_carry_over_log_id,
         so.from_carry_over_time,so.to_carry_over_time,so.create_account_id,
         so.update_account_id,so.create_time,so.update_time,so.finish_time,so.out_time,so.in_time,so.storage_order_sub_no,
         tcg.name category_name,
         tsf.name specification_name,
           u1.name unit_name,
           at.name account_name,
           s3.name apply_storage_name,
           c3.name from_customer_name,
           s2.name from_storage_name,
           c.id customer_id,
           c.name customer_name,
           c2.id parent_customer_id,
           c2.name parent_customer_name,
           sat.name storage_action_type_desc,
          (select case when tb.in_amount + coalesce(t.amount,0)  = 0 and t.amount notnull then 1 when  t.amount isnull and so.is_to_rcw=false then 4 when so.is_to_rcw=true then 3 else 2 end   from  (select sum(sod.in_amount) amount from t_rcw_log rl
           inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
          inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
        where rl.storage_order_id = so.id and rl.status = 1 and rl.action_type = 1
       ) t) is_rcw,
       t.regenerant_names,
           CASE WHEN tb.need_in = 1 THEN true else false end is_in,
             CASE
                   WHEN so.storage_order_status = 3 THEN '待中心审核'
                   WHEN so.storage_order_status = 5 THEN '待仓库调拨'
                   WHEN so.storage_order_status = 7 THEN '待出库'
                   WHEN so.storage_order_status = 8 THEN '待入库'
                   WHEN so.storage_order_status = 11 THEN '已完成'
                   WHEN so.storage_order_status = 12 THEN '采购已完成'
                   WHEN so.storage_order_status = 13 THEN '已关闭'
                   WHEN so.storage_order_status = 14 THEN '采购已完成'
                   WHEN so.storage_order_status = 15 THEN '采购已完成'
                   ELSE '已审核' END storage_order_status_desc,
           (select name from T_STORAGE where id=so.to_storage_id) to_storage_name,
            (select name from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE where id=so.to_storage_id)) to_customer_name,
            (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=so.TO_STORAGE_ID))) as to_parent_customer_name,
            (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=so.FROM_STORAGE_ID))) as from_parent_customer_name,
            (select NAME  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=so.apply_storage_id)) apply_customer_name,
            CASE
                  WHEN so.storage_order_status = 8 THEN '1'
                  ELSE '2' END      operate_status,
                   go.id goods_id,go.name goods_name,
                        go.unit,
                    CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
                    CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
                         tb.require_amount,
                          tb.price,
                          go.goods_code,
                          tb.out_amount,tb.in_amount,
                          tb.memo detail_memo
from t_storage_order so
    LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
     LEFT JOIN t_goods go on go.id=tb.goods_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
    LEFT JOIN t_category tcg on tcg.id = tb.category_id
    LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
     LEFT JOIN t_unit u1 on u1.id = tb.unit_id
      LEFT JOIN t_account at on at.id = so.update_account_id
    left join (
              select string_agg(z.regenerant_name, ',') as regenerant_names, z.goods_id
               from (
                  select gr.goods_id ,r.name regenerant_name from t_goods_regenerant gr
                     left join t_regenerant r on gr.regenerant_id = r.id where gr.status = 1
               ) z group by z.goods_id
            ) t on t.goods_id = go.id
where so.storage_action_type_id in ('3','6') and so.storage_order_status != 7
and (so.TO_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or so.TO_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                              where account_id = ?account_id)
 and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
{% if customer_id!="" %}
  and   so.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if !start_recycle_out_time.IsZero() %}
   and  so.OUT_TIME >= to_timestamp(?start_recycle_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_recycle_out_time.IsZero() %}
   and  so.OUT_TIME <= to_timestamp(?end_recycle_out_time,'YYYY-MM-DD hh24:mi:ss') and so.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_recycle_in_time.IsZero() %}
   and  so.IN_TIME >= to_timestamp(?start_recycle_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_recycle_in_time.IsZero() %}
   and  so.IN_TIME <= to_timestamp(?end_recycle_in_time,'YYYY-MM-DD hh24:mi:ss') and so.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  so.storage_order_status=?storage_order_status
{% endif%}
{% if keyword!="" %}
   and  so.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' or  so.STORAGE_ORDER_SUB_NO ilike '%' || ?keyword || '%'
{% endif%}
order by cast(so.id as INTEGER) desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.recycle.out.storage.order.cnt]]
with item AS (
  select storage_id,goods_id,sum(STOCK_NUM) stock_num from  T_STORAGE_GOODS_STOCK
  where status=1 and TYPE=2
  GROUP BY storage_id,goods_id
)
select count(1) cnt
from t_storage_order so
 LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
 LEFT JOIN t_goods go on go.id=tb.goods_id
 LEFT JOIN item  sto on sto.goods_id=tb.goods_id and sto.storage_id=so.from_storage_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
where so.storage_action_type_id IN('3','6','9','12')
and (so.FROM_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or so.FROM_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                              where account_id = ?account_id) and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
{% if customer_id!="" %}
  and   so.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if storage_action_type_id!="" %}
  and   so.storage_action_type_id=?storage_action_type_id
{% endif%}
{% if !start_recycle_out_time.IsZero() %}
   and  so.OUT_TIME >= to_timestamp(?start_recycle_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_recycle_out_time.IsZero() %}
   and  so.OUT_TIME <= to_timestamp(?end_recycle_out_time,'YYYY-MM-DD hh24:mi:ss') and so.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_recycle_in_time.IsZero() %}
   and  so.IN_TIME >= to_timestamp(?start_recycle_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_recycle_in_time.IsZero() %}
   and  so.IN_TIME <= to_timestamp(?end_recycle_in_time,'YYYY-MM-DD hh24:mi:ss') and so.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  so.storage_order_status=?storage_order_status
{% endif%}
{% if keyword!="" %}
   and  (go.name ilike '%' || ?keyword || '%'
        or go.goods_code ilike '%' || ?keyword || '%'
   )
{% endif%}

[[query.recycle.out.storage.order.list]]
with item AS (
  select storage_id,goods_id,sum(STOCK_NUM) stock_num from  T_STORAGE_GOODS_STOCK
  where status=1 and TYPE=2
  GROUP BY storage_id,goods_id
)
select ROW_NUMBER() over(ORDER BY so.id) row_num, so.to_supplier_id||'--'||coalesce(sa.id,'0') as id,
case when sa.id ='0' then ts.name else sa.supplier_alias_name end to_supplier_name,
         so.id storage_order_id,so.storage_order_no,so.from_supplier_id,so.to_supplier_id,so.apply_storage_id,so.from_storage_id,so.to_storage_id,
         so.from_customer_id,so.storage_action_type_id,so.memo,so.storage_order_status,so.is_from_rcw,so.is_to_rcw,
         so.is_from_carry_over,so.is_to_carry_over,so.from_carry_over_log_id,so.to_carry_over_log_id,
         so.from_carry_over_time,so.to_carry_over_time,so.create_account_id,
         so.update_account_id,so.create_time,so.update_time,so.finish_time,so.out_time,so.in_time,so.storage_order_sub_no,
         tcg.name category_name,
         tsf.name specification_name,
         u1.name unit_name,
           s3.name apply_storage_name,
           c3.name from_customer_name,
           s2.name from_storage_name,
           c.id customer_id,
           c.name customer_name,
           c2.id parent_customer_id,
           c2.name parent_customer_name,
           sat.name storage_action_type_desc,
            CASE WHEN tb.need_in = 1 THEN true else false end is_in,
             CASE
                   WHEN so.storage_order_status = 3 THEN '待中心审核'
                   WHEN so.storage_order_status = 5 THEN '待仓库调拨'
                   WHEN so.storage_order_status = 7 THEN '待出库'
                   WHEN so.storage_order_status = 8 THEN '待入库'
                   WHEN so.storage_order_status = 11 THEN '已完成'
                   WHEN so.storage_order_status = 12 THEN '采购已完成'
                   WHEN so.storage_order_status = 13 THEN '已关闭'
                   WHEN so.storage_order_status = 14 THEN '采购已完成'
                   WHEN so.storage_order_status = 15 THEN '采购已完成'
                   ELSE '已审核' END storage_order_status_desc,
                    (select case when tb.out_amount + coalesce(t.amount,0) = 0 and t.amount notnull  then 1 when  t.amount isnull and so.is_from_rcw=false then 4 when so.is_from_rcw=true then 3 else 2 end   from  (select sum(sod.out_amount) amount from t_rcw_log rl
                                                  inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
                                                  inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
                                                  where rl.storage_order_id = so.id and rl.status = 1 and rl.action_type = 2
                                                  ) t) is_rcw,
            t.regenerant_names,
           (select name from T_STORAGE where id=so.to_storage_id) to_storage_name,
            (select name from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE where id=so.to_storage_id)) to_customer_name,
            (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=so.TO_STORAGE_ID))) as to_parent_customer_name,
            (select name from t_customer where id = (select parent_customer_id from t_customer where id in (select CUSTOMER_ID from T_STORAGE where id=so.FROM_STORAGE_ID))) as from_parent_customer_name,
            (select NAME  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=so.apply_storage_id)) apply_customer_name,
            CASE
                  WHEN so.storage_order_status = 7 THEN '1'
                  ELSE '2' END      operate_status,
                    go.id goods_id,go.name goods_name,
                        go.unit,
                    CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
                    CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
                       tb.require_amount,
                       tb.price,
                       go.goods_code,
                        COALESCE(sto.stock_num,0),
                        tb.out_amount,CASE WHEN tb.in_amount = -1 THEN 0 ELSE tb.in_amount END in_amount
from t_storage_order so
LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
 LEFT JOIN t_goods go on go.id=tb.goods_id
 LEFT JOIN item  sto on sto.goods_id=tb.goods_id and sto.storage_id=so.from_storage_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on s2.customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
    left join t_supplier ts on so.to_supplier_id = ts.id
    LEFT JOIN t_category tcg on tcg.id = tb.category_id
    LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
    LEFT JOIN t_unit u1 on u1.id = tb.unit_id
    LEFT JOIN (
                  SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
                  SELECT '0','','',1
                        ) sa on sa.id = so.to_supplier_alias_id
    left join (
              select string_agg(z.regenerant_name, ',') as regenerant_names, z.goods_id
               from (
                  select gr.goods_id ,r.name regenerant_name from t_goods_regenerant gr
                     left join t_regenerant r on gr.regenerant_id = r.id where gr.status = 1
               ) z group by z.goods_id
            ) t on t.goods_id = go.id
where so.storage_action_type_id IN('3','6','9','12')
and (so.FROM_STORAGE_ID in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?account_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?account_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or so.FROM_STORAGE_ID in (select id from T_STORAGE
 where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                              where account_id = ?account_id)
  and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id) ))
{% if customer_id!="" %}
  and   so.FROM_STORAGE_ID=(select ID from T_STORAGE where CUSTOMER_ID =?customer_id)
{% endif%}
{% if storage_action_type_id!="" %}
  and   so.storage_action_type_id=?storage_action_type_id
{% endif%}
{% if !start_recycle_out_time.IsZero() %}
   and  so.OUT_TIME >= to_timestamp(?start_recycle_out_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_recycle_out_time.IsZero() %}
   and  so.OUT_TIME <= to_timestamp(?end_recycle_out_time,'YYYY-MM-DD hh24:mi:ss') and so.OUT_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if !start_recycle_in_time.IsZero() %}
   and  so.IN_TIME >= to_timestamp(?start_recycle_in_time,'YYYY-MM-DD hh24:mi:ss')
{% endif%}
{% if !end_recycle_in_time.IsZero() %}
   and  so.IN_TIME <= to_timestamp(?end_recycle_in_time,'YYYY-MM-DD hh24:mi:ss') and so.IN_TIME !=to_date('0001-01-01','YYYY-MM-DD')
{% endif%}
{% if storage_order_status %}
   and  so.storage_order_status=?storage_order_status
{% endif%}
{% if keyword!="" %}
   and  (go.name ilike '%' || ?keyword || '%'
        or go.goods_code ilike '%' || ?keyword || '%'
   )
{% endif%}
order by cast(so.id as integer) desc
limit ?page_size offset (?page_num - 1) * ?page_size




[[query.remote.apply.storage.order.cnt]]
select count(*) cnt
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s3.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id = '1' and so.apply_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
        select customer_id from t_account_child_customer where account_id = ?account_id
        {% if customer_id!="" %}
           and customer_id=?customer_id
        {% endif%}
    ) and status = 1
)
{% if !start_create_time.IsZero() %}
and so.create_time>=to_date(?start_create_time,'YYYY-MM-DD')
{% endif%}
{% if !end_create_time.IsZero() %}
and so.create_time<to_date(?end_create_time,'YYYY-MM-DD')+1
{% endif%}

[[query.remote.apply.storage.order.list]]
select so.*,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.name from_storage_name,
    s.name to_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    sat.name storage_action_type_desc,
    mm.meta_desc storage_order_status_desc
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s3.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id = '1' and so.apply_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
         select c.id from t_account_child_customer acc
               inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
               where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)
{% if !start_create_time.IsZero() %}
and so.create_time>=to_date(?start_create_time,'YYYY-MM-DD')
{% endif%}
{% if !end_create_time.IsZero() %}
and so.create_time<to_date(?end_create_time,'YYYY-MM-DD')+1
{% endif%}
order by so.create_time desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.remote.approve.storage.order.cnt]]
select count(*) cnt
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s3.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.from_customer_id = ?parent_customer_id and
      (
        select count(*) from t_storage where customer_id in (
            select c.id from t_account_child_customer acc
                  inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                  where account_id = ?account_id
        ) and storage_property_id = '1' and status = 1
      )>0
{% if !start_create_time.IsZero() %}
and so.create_time>=to_date(?start_create_time,'YYYY-MM-DD')
{% endif%}
{% if !end_create_time.IsZero() %}
and so.create_time<to_date(?end_create_time,'YYYY-MM-DD')+1
{% endif%}



[[query.tstorage.order.list]]
select
    ROW_NUMBER() over(ORDER BY ta.id) row_num,
    tc.name apply_customer_name,
    tc2.name to_customer_name,
    ptc2.name to_parent_customer_name,
    ts2.name to_storage_name,
    ta.id as storage_order_id,ta.storage_order_no,ta.storage_order_sub_no,td.name as purchase_name,
    tb.id storage_order_detail_id,
	tc1.name from_customer_name,
	ts1.name from_storage_name,
	ptc2.name from_parent_customer_name,
	td.name apply_storage_name,
	ta.create_time,
	ta.memo,
	ta.storage_order_status,
	tcg.name category_name,
    tsf.name specification_name,
    u1.name require_unit_name,
    u2.name unit_name,
	  ta.is_ratitied,
      CASE WHEN ta.is_ratitied = 2 THEN '无'
      WHEN ta.is_ratitied = 1 THEN '已批量'
      WHEN ta.is_ratitied = 3 THEN '待批量'
      else '错误' end is_ratitied_desc,
    CASE
    WHEN ta.storage_order_status = 3 THEN '待中心审核'
    WHEN ta.storage_order_status = 5 THEN '待仓库调拨'
    WHEN ta.storage_order_status = 7 THEN '待出库'
    WHEN ta.storage_order_status = 8 THEN '待入库'
    WHEN ta.storage_order_status = 11 THEN '已完成'
    WHEN ta.storage_order_status = 12 THEN '采购已完成'
    WHEN ta.storage_order_status = 13 THEN '已关闭'
    WHEN ta.storage_order_status = 14 THEN '采购已完成'
    WHEN ta.storage_order_status = 15 THEN '采购已完成'
    ELSE '已审核' END storage_order_status_desc,
    CASE WHEN ta.storage_order_status = 3 THEN 1
    ELSE 2 END operate_status,
    stoat.name storage_action_type_desc,
    go.id goods_id,go.name goods_name,go.goods_code,go.main_pic_url main_pir_url,
        go.unit unit,prca.id cate_lv1_id,prca.name cate_lv1_name,
        tb.require_arrive_time require_arrive_time,tb.require_amount require_amount,
        tb.price,tb.memo detail_memo
from T_STORAGE_ORDER ta
left join t_STORAGE_ACTION_TYPE stoat on stoat.id=ta.STORAGE_ACTION_TYPE_ID
LEFT JOIN T_STORAGE  td on td.id=ta.apply_storage_id
LEFT JOIN t_customer tc ON tc.id = td.customer_id
LEFT JOIN t_storage ts1 ON ts1.id = ta.from_storage_id
LEFT JOIN t_customer tc1 ON tc1.id = ta.from_customer_id
LEFT JOIN t_customer ptc1 ON ptc1.id =tc1.parent_customer_id
LEFT JOIN t_storage ts2 ON ts2.id = ta.to_storage_id
LEFT JOIN t_customer tc2 ON tc2.id = ts2.customer_id
LEFT JOIN t_customer ptc2 ON ptc2.id = tc2.parent_customer_id
LEFT JOIN t_storage_order_detail tb on tb.storage_order_id=ta.id and tb.status=1
LEFT JOIN t_goods go on go.id=tb.goods_id and go.status=1
LEFT JOIN t_product_category prca on prca.id=go.cate_lv1_id and prca.status=1
LEFT JOIN t_category tcg on tcg.id = tb.category_id
LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
LEFT JOIN t_unit u1 on u1.id = tb.require_unit_id
LEFT JOIN t_unit u2 on u2.id = tb.unit_id
	where   storage_order_status not in (1,2)
	and storage_action_type_id in ('1','7','8')
	{% if keyword!="" %}
     and (ta.storage_order_no ilike '%' || ?keyword || '%' or
     (select NAME  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.apply_storage_id)) ilike '%' || ?keyword || '%' or
        CnFirstChar((select NAME  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.apply_storage_id))) ilike '%' || ?keyword || '%'
     )
    {% endif%}
    {% if storage_order_status %}
    and ta.storage_order_status=?storage_order_status
    {% endif%}
    {% if property_id !=0 %}
    and ta.storage_action_type_id=?property_id
     {% endif%}
{% if parent_customer_id !="" %}
         and  tc.parent_customer_id = ?parent_customer_id
{% endif%}
    order by cast(ta.id as integer) desc
    limit ?page_size offset (?page_num - 1) * ?page_size


[[query.tstorage.order.cnt]]
   select    count(1) cnt
   from T_STORAGE_ORDER ta
   LEFT JOIN T_STORAGE  td on td.id=ta.apply_storage_id
    LEFT JOIN t_customer tc on tc.id=td.customer_id
   LEFT JOIN t_storage_order_detail tb on tb.storage_order_id=ta.id and tb.status=1
   LEFT JOIN t_goods go on go.id=tb.goods_id and go.status=1
   LEFT JOIN t_product_category prca on prca.id=go.cate_lv1_id and prca.status=1
   	where  storage_order_status not in (1,2)
   	and storage_action_type_id in ('1','7','8')
   	{% if keyword!="" %}
        and (ta.storage_order_no ilike '%' || ?keyword || '%' or
        (select NAME  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.apply_storage_id)) ilike '%' || ?keyword || '%' or
      CnFirstChar((select NAME  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.apply_storage_id))) ilike '%' || ?keyword || '%'
        )
       {% endif%}
       {% if storage_order_status %}
       and ta.storage_order_status=?storage_order_status
       {% endif%}
{% if property_id !=0 %}
and ta.storage_action_type_id=?property_id
 {% endif%}
{% if parent_customer_id !="" %}
         and  tc.parent_customer_id = ?parent_customer_id
{% endif%}



[[query.remote.approve.storage.order.list]]
select so.*,
   s3.name apply_storage_name,
    c3.name from_customer_name,
   s2.name from_storage_name,
   s.name to_storage_name,
   c.id customer_id,
   c.name customer_name,
   c2.id parent_customer_id,
   c2.name parent_customer_name,
   sat.name storage_action_type_desc,
   mm.meta_desc storage_order_status_desc
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s3.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.from_customer_id = ?parent_customer_id and
      (
        select count(*) from t_storage where customer_id in (
            select c.id from t_account_child_customer acc
                  inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                  where account_id = ?account_id
        ) and storage_property_id = '1' and status = 1
      )>0
{% if !start_create_time.IsZero() %}
and so.create_time>=to_date(?start_create_time,'YYYY-MM-DD')
{% endif%}
{% if !end_create_time.IsZero() %}
and so.create_time<to_date(?end_create_time,'YYYY-MM-DD')+1
{% endif%}
order by so.create_time desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.remote.storage.order.by.center.cnt]]
select count(*) cnt
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s3.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id = '1'
{% if !start_create_time.IsZero() %}
and so.create_time>=to_date(?start_create_time,'YYYY-MM-DD')
{% endif%}
{% if !end_create_time.IsZero() %}
and so.create_time<to_date(?end_create_time,'YYYY-MM-DD')+1
{% endif%}

[[query.remote.storage.order.by.center.list]]
select so.*,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.name from_storage_name,
    s.name to_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    sat.name storage_action_type_desc,
    mm.meta_desc storage_order_status_desc
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s3.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
where so.storage_action_type_id = '1'
{% if !start_create_time.IsZero() %}
and so.create_time>=to_date(?start_create_time,'YYYY-MM-DD')
{% endif%}
{% if !end_create_time.IsZero() %}
and so.create_time<to_date(?end_create_time,'YYYY-MM-DD')+1
{% endif%}
order by so.create_time desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.storage.order.detail.cnt]]
select count(1) cnt
from t_storage_order_detail
where storage_order_id = ?storage_order_id and status = 1

[[query.storage.order.detail.list]]
SELECT
    ROW_NUMBER() over(ORDER BY cast(sod.id as integer) desc ) row_num,
    g.id goods_id,
    g.name goods_name,
    g.unit,
    g.goods_code,
    sod.price price,
    sod.memo,
    sod.allow_amount,
    sod.ratitied_amount,
    case when sod.need_in =1 then true else false end is_in,
    CASE WHEN sod.in_amount = -1 THEN 0 ELSE sod.in_amount END in_amount,
    CASE WHEN sod.in_amount = -1 THEN sod.out_amount ELSE sod.in_amount END put_in_amount,
    CASE WHEN sod.out_amount = -1 THEN sod.require_amount ELSE sod.out_amount END put_out_amount,
    CASE WHEN sod.need_ratity_amount = 1 THEN sod.ratitied_amount ELSE sod.require_amount END is_ratitied_amount,
    sod.storage_order_id,
    CASE WHEN sod.out_amount = -1  THEN 0 ELSE sod.out_amount END out_amount,
    sod.require_amount,
    to_char(sod.require_arrive_time,'YYYY-MM-DD') require_time,
    sod.create_time,
    CASE WHEN sod.in_amount = -1 THEN sod.price*sod.out_amount ELSE sod.price*sod.in_amount END in_total_price,
    CASE WHEN sod.out_amount = -1 THEN  sod.price*sod.require_amount ELSE  sod.price*sod.out_amount END out_total_price,
    sod.price*sod.require_amount require_amount,
    case when sod.type=1 then '' else gz.regenerant_names end regenerant_names,
    sod.id storage_order_detail_id,
    sod.type goods_type,
    g.main_pic_url,
    CASE WHEN o.order_time is NULL then so.create_time  ELSE o.order_time END order_time,
    CASE WHEN o.order_status = 9 THEN '已完成' WHEN o.order_status is NULL THEN '已完成' else '已签收' END order_status_desc,
    o.order_status,
    pc1.name cate_lv1_name,
    pc2.name cate_lv2_name,
    p.name prd_name,
    s.name supplier_name,
    sod.need_ratity_amount,
   (select    COALESCE(cpc.price,0) from t_cust_price_config cpc
           WHERE cpc.status = 1 and cpc.customer_id = ts.customer_id and cpc.goods_id = sod.goods_id limit 1
             ) rating_price
    from  t_storage_order_detail sod
  INNER JOIN t_goods g ON sod.goods_id = g.id
  INNER JOIN t_storage_order so ON so.id = sod.storage_order_id
  LEFT  JOIN t_storage ts ON ts.id = so.apply_storage_id and ts.status = 1
  LEFT JOIN (select string_agg(z.regenerant_name, ',') as regenerant_names, z.goods_id
       from (
          select gr.goods_id ,r.name regenerant_name from t_goods_regenerant gr
             left join t_regenerant r on gr.regenerant_id = r.id
       ) z group by z.goods_id) gz ON gz.goods_id=g.id
  	left join t_product_category pc1 on g.cate_lv1_id = pc1.id
  	left join t_product_category pc2 on g.cate_lv2_id = pc2.id
  	left join t_product p on g.prd_id = p.id
    left join t_order o on o.id = sod.ref_order_id
    left join t_supplier s on s.id = so.from_supplier_id
WHERE sod.storage_order_id=?storage_order_id and sod.status = 1
order by sod.create_time desc,cast(sod.goods_id as integer) desc

[[query.all.storage.order.detail.cnt]]
select count(1) cnt
from t_storage_order_detail
where storage_order_id = ?storage_order_id and status = 1



[[query.order.Splitdetail.cnt]]
select count(1) count from T_STORAGE_ORDER_DETAIL
where STORAGE_ORDER_ID =?storage_order_id and status = 1


[[query.order.Splitdetail.max]]
select count(1) count from T_STORAGE_ORDER



[[query.all.storage.order.detail.list]]
with tmp as(
SELECT
    row_number() over(order by g.id||'-'||u1.id) row_num,
    sod.storage_order_id,
    g.id||'-'||u1.id id,
    g.name||'--'||tsf.name||'--'||u1.name as name,
    g.id goods_id,
    g.name goods_name,
    g.unit,
    g.goods_code,
    sod.memo,
    sod.price price,
    CASE ?type WHEN '1' THEN sod.in_amount  WHEN '2' THEN sod.out_amount ELSE sod.require_amount END AS amount,
    case when sod.type=1 then '' else gz.regenerant_names end regenerant_names,
    sod.id storage_order_detail_id,
    sod.type goods_type,
    g.main_pic_url,
    sod.require_arrive_time require_time,
    g.main_pic_url,
    pc1.name cate_lv1_name,
    pc2.name cate_lv2_name,
    u1.id require_unit_id,
    u2.id unit_id,
    u1.name require_unit_name,
    u2.name unit_name,
    tcg.name category_name,
    tsf.name specification_name,
    sod.recipient,
    p.name prd_name
    from  t_storage_order_detail sod
  INNER JOIN t_goods g ON sod.goods_id = g.id
  LEFT JOIN (select string_agg(z.regenerant_name, ',') as regenerant_names, z.goods_id
       from (
          select gr.goods_id ,r.name regenerant_name from t_goods_regenerant gr
             left join t_regenerant r on gr.regenerant_id = r.id where gr.status = 1
       ) z group by z.goods_id) gz ON gz.goods_id=g.id
  	left join t_product_category pc1 on g.cate_lv1_id = pc1.id
  	left join t_product_category pc2 on g.cate_lv2_id = pc2.id
  	left join t_product p on g.prd_id = p.id
  	LEFT JOIN t_category tcg on tcg.id = sod.category_id
    LEFT JOIN t_specification tsf on tsf.id = sod.specification_id
    LEFT JOIN t_unit u1 on u1.id = sod.require_unit_id
    LEFT JOIN t_unit u2 on u2.id = sod.unit_id
WHERE sod.storage_order_id=?storage_order_id and sod.status = 1
order by sod.create_time desc
)
SELECT t.*,
  COALESCE(((SELECT CASE ?type WHEN '1' THEN -sum(tsod.in_amount)  WHEN '2' THEN -sum(tsod.out_amount) ELSE -sum(tsod.require_amount) END
  FROM t_rcw_log trl
    INNER JOIN t_storage_order tso ON tso.id=trl.update_storage_order_id
    INNER JOIN t_storage_order_detail tsod ON tsod.storage_order_id=tso.id and tsod.ref_storage_order_detail_id = t.storage_order_detail_id and tsod.status = 1
    WHERE trl.storage_order_id=t.storage_order_id AND tsod.goods_id=t.goods_id
  )),0)-t.amount rcw_amount
FROM tmp t



[[query.storage.order.in.local.cnt]]
select count(1) cnt
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
where so.storage_action_type_id = '2' and so.to_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
        select c.id from t_account_child_customer acc
              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
              where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)
  {% if !start_put_out_time.IsZero() %}
  and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
  {% endif%}
  {% if !end_put_out_time.IsZero() %}
  and so.out_time<=to_date(?end_put_out_time,'YYYY-MM-DD') and so.out_time !=to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
  {% if !start_put_in_time.IsZero() %}
  and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
  {% endif%}
  {% if !end_put_in_time.IsZero() %}
  and so.in_time<=to_date(?end_put_in_time,'YYYY-MM-DD') and so.in_time !=to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
  {% if storage_order_status != "" %}
   AND so.storage_order_status=?storage_order_status
  {% endif%}
  {% if customer_id != "" %}
  AND c.id=?customer_id
  {% endif%}
  {% if keyword!="" %}
  and so.storage_order_no ilike '%'||?keyword||'%'
  {% endif%}

[[query.storage.order.in.local.list]]
select so.*,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.name from_storage_name,
    s.name to_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    sat.name storage_action_type_desc,
    mp.meta_desc storage_order_status_desc
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
where so.storage_action_type_id = '2' and so.to_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
         select c.id from t_account_child_customer acc
               inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
               where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)
  {% if !start_put_out_time.IsZero() %}
  and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
  {% endif%}
  {% if !end_put_out_time.IsZero() %}
  and so.out_time<=to_date(?end_put_out_time,'YYYY-MM-DD')  and so.out_time !=to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
  {% if !start_put_in_time.IsZero() %}
  and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
  {% endif%}
  {% if !end_put_in_time.IsZero() %}
  and so.in_time<=to_date(?end_put_in_time,'YYYY-MM-DD')  and so.in_time !=to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
  {% if storage_order_status != "" %}
   AND so.storage_order_status=?storage_order_status
  {% endif%}
  {% if customer_id != "" %}
  AND c.id=?customer_id
  {% endif%}
   {% if keyword!="" %}
    and so.storage_order_no ilike '%'||?keyword||'%'
    {% endif%}
    order by so.create_time desc
   limit ?page_size offset (?page_num - 1) * ?page_size

[[query.storage.order.out.local.cnt]]
select count(1) cnt
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
where so.storage_action_type_id = '2' and so.from_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
       select c.id from t_account_child_customer acc
             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
             where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)
  {% if !start_put_out_time.IsZero() %}
  and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
  {% endif%}
  {% if !end_put_out_time.IsZero() %}
  and so.out_time<=to_date(?end_put_out_time,'YYYY-MM-DD')  and so.out_time !=to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
  {% if !start_put_in_time.IsZero() %}
  and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
  {% endif%}
  {% if !end_put_in_time.IsZero() %}
  and so.in_time<=to_date(?end_put_in_time,'YYYY-MM-DD')  and so.in_time !=to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
  {% if storage_order_status != "" %}
   AND so.storage_order_status=?storage_order_status
  {% endif%}
  {% if customer_id != "" %}
  AND c.id=?customer_id
  {% endif%}
  {% if keyword!="" %}
  and so.storage_order_no ilike '%'||?keyword||'%'
  {% endif%}

[[query.storage.order.out.local.list]]
select so.*,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.name from_storage_name,
    s.name to_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    sat.name storage_action_type_desc,
    mp.meta_desc storage_order_status_desc
from t_storage_order so
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
where so.storage_action_type_id = '2' and so.from_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
         select c.id from t_account_child_customer acc
               inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
               where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
)
  {% if !start_put_out_time.IsZero() %}
  and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
  {% endif%}
  {% if !end_put_out_time.IsZero() %}
  and so.out_time<=to_date(?end_put_out_time,'YYYY-MM-DD')  and so.out_time !=to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
  {% if !start_put_in_time.IsZero() %}
  and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
  {% endif%}
  {% if !end_put_in_time.IsZero() %}
  and so.in_time<=to_date(?end_put_in_time,'YYYY-MM-DD')  and so.in_time !=to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
  {% if storage_order_status != "" %}
   AND so.storage_order_status=?storage_order_status
  {% endif%}
  {% if customer_id != "" %}
  AND cs.id=?customer_id
  {% endif%}
   {% if keyword!="" %}
    and so.storage_order_no ilike '%'||?keyword||'%'
    {% endif%}
    order by so.create_time desc
   limit ?page_size offset (?page_num - 1) * ?page_size

[[query.storage.order.for.out.shopping.cnt]]
select count(1) cnt
from t_storage_order so
     LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
     LEFT JOIN t_goods go on go.id=tb.goods_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
where so.storage_action_type_id = '5' and so.from_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
         select c.id from t_account_child_customer acc
               inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
               where account_id = ?account_id
        {% if customer_id!="" %}
           and c.id=?customer_id
        {% endif%}
    ) and status = 1
) AND (s2.storage_type_id in (SELECT storage_type_id FROM t_acct_role_storage_type_priv WHERE account_id = ?account_id AND status= 1)
 or (SELECT id FROM t_role WHERE role_code='cst_super_admin') IN (SELECT role_id FROM t_acct_role WHERE account_id = ?account_id)
 )
    {% if !start_put_out_time.IsZero() %}
    and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
    {% endif%}
    {% if !end_put_out_time.IsZero() %}
    and so.out_time<=to_date(?end_put_out_time,'YYYY-MM-DD')  and so.out_time !=to_date('0001-01-01','YYYY-MM-DD')
    {% endif%}
    {% if !start_put_in_time.IsZero() %}
    and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
    {% endif%}
    {% if !end_put_in_time.IsZero() %}
    and so.in_time<=to_date(?end_put_in_time,'YYYY-MM-DD')  and so.in_time !=to_date('0001-01-01','YYYY-MM-DD')
    {% endif%}
    {% if storage_order_status != "" && storage_order_status %}
     AND so.storage_order_status=?storage_order_status
    {% endif%}
    {% if customer_id != "" %}
    AND c.id=?customer_id
    {% endif%}
     {% if keyword!="" %}
      and so.storage_order_no ilike '%'||?keyword||'%'
      {% endif%}

[[query.storage.order.for.out.shopping.list]]
select so.*,
so.is_from_rcw,
so.is_to_rcw,
tcg.name category_name,
tsf.name specification_name,
u1.name unit_name,
    so.id storage_order_id,
    s3.name apply_storage_name,
    c3.name from_customer_name,
    s2.name from_storage_name,
    s.name to_storage_name,
    c.id customer_id,
    c.name customer_name,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    sat.name storage_action_type_desc,
    mp.meta_desc storage_order_status_desc,
    (select case when tb.out_amount + coalesce(t.amount,0) = 0 and t.amount notnull then 1 when  t.amount isnull and so.is_from_rcw=false then 4 when so.is_from_rcw=true then 3 else 2 end   from  (select sum(sod.out_amount) amount from t_rcw_log rl
    inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
    inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
    where rl.storage_order_id = so.id and rl.status = 1 and rl.action_type = 2
    ) t) is_rcw,
    case so.storage_order_status when 7 then '待出库' when 8 then '已出库' when 13 then '已关闭' when 11 then '已完成' else '未知' end status_desc,
    go.id goods_id,go.name goods_name,
    go.unit,
     go.main_pic_url,
    CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
    CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
    tb.price,
    go.goods_code,
          case
              when tb.out_amount != -1     then  tb.out_amount*tb.price/100
              when tb.in_amount != -1     then  tb.in_amount*tb.price/100
              else tb.require_amount*tb.price/100 end    total,
              tb.out_amount,tb.in_amount,
              tb.out_amount * tb.price out_total_price,
              tb.memo detail_memo
from t_storage_order so
    LEFT JOIN t_storage_order_detail tb on so.id=tb.storage_order_id and tb.status=1
     LEFT JOIN t_goods go on go.id=tb.goods_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s2.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
    LEFT JOIN t_category tcg on tcg.id = tb.category_id
    LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
    LEFT JOIN t_unit u1 on u1.id = tb.unit_id
where so.storage_action_type_id = '5' and so.from_storage_id in (
    select DISTINCT id from t_storage where customer_id in (
                                  select c.id from t_account_child_customer acc
                                     inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                     where account_id = ?account_id
            {% if customer_id!="" %}
              and c.id=?customer_id
             {% endif%}
       ) and status = 1
) AND (s2.storage_type_id in (SELECT storage_type_id FROM t_acct_role_storage_type_priv WHERE account_id = ?account_id AND status= 1)
   or (SELECT id FROM t_role WHERE role_code='cst_super_admin') IN (SELECT role_id FROM t_acct_role WHERE account_id = ?account_id)
   )
    {% if !start_put_out_time.IsZero() %}
    and so.out_time>=to_date(?start_put_out_time,'YYYY-MM-DD')
    {% endif%}
    {% if !end_put_out_time.IsZero() %}
    and so.out_time<=to_date(?end_put_out_time,'YYYY-MM-DD')  and so.out_time !=to_date('0001-01-01','YYYY-MM-DD')
    {% endif%}
    {% if !start_put_in_time.IsZero() %}
    and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
    {% endif%}
    {% if !end_put_in_time.IsZero() %}
    and so.in_time<=to_date(?end_put_in_time,'YYYY-MM-DD')  and so.in_time !=to_date('0001-01-01','YYYY-MM-DD')
    {% endif%}
     {% if storage_order_status != "" && storage_order_status %}
     AND so.storage_order_status=?storage_order_status
    {% endif%}
    {% if customer_id != "" %}
    AND c.id=?customer_id
    {% endif%}
    {% if keyword!="" %}
    and so.storage_order_no ilike '%'||?keyword||'%'
    {% endif%}
order by cast(so.id as integer) desc
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.storage.order.not.carry.over.cnt]]
select count(*) cnt from (
select * from t_storage_order
where from_storage_id in (select id from t_storage where customer_id =?customer_id) and is_from_carry_over = false
      and to_char(finish_time,'YYYY-MM') < to_char(now() - INTERVAL'1 month','YYYY-MM')  and to_char(finish_time,'YYYY-MM') != '0001-01' and storage_order_status = 11
union
select * from t_storage_order
where to_storage_id in (select id from t_storage where customer_id =?customer_id) and is_to_carry_over = false
      and to_char(finish_time,'YYYY-MM') < to_char(now() - INTERVAL'1 month','YYYY-MM') and to_char(finish_time,'YYYY-MM') != '0001-01' and storage_order_status = 11
) z

[[query.select.qin.cnt]]
with tmp as(
select  count(1) cnt
from T_STORAGE_ORDER ta left JOIN  T_STORAGE_ORDER_DETAIL tb
on ta.id=tb.STORAGE_ORDER_ID  and tb.status = 1
LEFT JOIN T_GOODS tc on tc.id=tb.GOODS_ID
where 1=1
      {% if keyword!="" %}
       and (tc.name ilike '%' || ?keyword || '%'  or CnFirstChar(tc.name) ilike '%' || ?keyword || '%' )
      {% endif%}
      {% if storage_order_status %}
      and ta.storage_order_status=?storage_order_status
      {% endif%}
and (ta.apply_storage_id in (
      select id from T_STORAGE
      where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                                   inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                   where account_id = ?accot_id)
      and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?accot_id
      and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
      )
      or ta.apply_storage_id in (select id from T_STORAGE
                where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                             where account_id = ?accot_id) and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?accot_id) ))
and ta.STORAGE_ACTION_TYPE_ID in ('1','7','8')
 GROUP BY ta.id
 )
 	SELECT count(1) cnt FROM tmp





[[query.select.qin.list]]
select
ROW_NUMBER() over(ORDER BY ta.id) row_num,
ta.storage_order_sub_no,ta.apply_storage_id,ta.id as storage_order_id,
ta.storage_order_no,
ta.memo,
count(1) require_amount,
ta.CREATE_TIME,
  (SELECT   CASE WHEN storage_order_status_bef =0 AND storage_order_status_aft = 1 THEN a.name||' '||  '创建订单'
		   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 1 THEN a.name||' '||  '修改订单'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 1 THEN a.name||' '||'撤回订单'
		   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 2 THEN a.name||' '||'提交订单'
		   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 3 THEN a.name||' '||'异地采购提交订单'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 3 THEN a.name||' '||'转发中心'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 12 THEN a.name||' '|| '导入采购网站'
		   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 5 THEN a.name||' '||'中心派单'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 2 THEN a.name||' '||'拆分订单'
		   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 3 THEN a.name||' '||'中心拆分订单'
		   WHEN storage_order_status_bef =5 AND storage_order_status_aft = 7 THEN a.name||' '||'调拨派单'
		   WHEN storage_order_status_bef =7 AND storage_order_status_aft = 5 THEN a.name||' '||'无货退回'
		   WHEN storage_order_status_bef =7 AND storage_order_status_aft = 8 THEN a.name||' '||'调拨出库'
		   WHEN storage_order_status_bef =8 AND storage_order_status_aft = 11 THEN a.name||' '||'调拨入库'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 13 THEN a.name||' '||'拒绝请购'
		   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 13 THEN a.name||' '||'拒绝调拨'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 14 THEN a.name||' '||'采购完成'
		   WHEN storage_order_status_bef =14 AND storage_order_status_aft = 15 THEN a.name||' '||'创建入库单'
		   ELSE '错误' END last_pursue FROM t_storage_order_log sol
      INNER JOIN t_account a ON a.id = ta.update_account_id
      WHERE sol.storage_order_id = ta.id  ORDER BY sol.create_time DESC LIMIT  1)  last_pursue,
CASE
WHEN ta.storage_order_status = 1 THEN '待提交'
WHEN ta.storage_order_status = 2 THEN '待审核'
WHEN ta.storage_order_status = 3 THEN '待中心审核'
WHEN ta.storage_order_status = 5 THEN '待仓库调拨'
WHEN ta.storage_order_status = 7 THEN '待出库'
WHEN ta.storage_order_status = 8 THEN '待入库'
WHEN ta.storage_order_status = 11 THEN '已完成'
WHEN ta.storage_order_status = 12 THEN '采购已完成'
WHEN ta.storage_order_status = 13 THEN '已关闭'
WHEN ta.storage_order_status = 14 THEN '采购已完成'
WHEN ta.storage_order_status = 15 THEN '采购已完成'
ELSE '已审核' END storage_order_status_desc,
CASE WHEN ta.storage_order_status = 1 THEN 1
WHEN ta.storage_order_status = 2 and ( ta.is_ratitied = 2 or ta.is_ratitied = 3) THEN 2
ELSE 3 END operate_status,
(select name from T_STORAGE   where ID=ta.APPLY_STORAGE_ID) apply_storage_name,
(select name from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE   where ID=ta.APPLY_STORAGE_ID))  apply_customer_name,
(select name from T_CUSTOMER where id=(select parent_customer_id from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE   where ID=ta.APPLY_STORAGE_ID)) ) apply_parent_customer_name,
    (select name  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.TO_STORAGE_ID)) to_customer_name,
    (select name from T_CUSTOMER where id=(select parent_customer_id  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.TO_STORAGE_ID))) to_parent_customer_name,
    (select NAME from T_STORAGE  where ID=ta.TO_STORAGE_ID) to_storage_name,
    (select name  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.FROM_STORAGE_ID)) from_customer_name,
    (select name from T_CUSTOMER where id=(select parent_customer_id  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.FROM_STORAGE_ID))) from_parent_customer_name,
    (select NAME from T_STORAGE  where ID=ta.FROM_STORAGE_ID) from_storage_name
from T_STORAGE_ORDER ta left JOIN  T_STORAGE_ORDER_DETAIL tb
on ta.id=tb.STORAGE_ORDER_ID and tb.status=1
LEFT JOIN T_GOODS tc on tc.id=tb.GOODS_ID
where 1=1
{% if keyword!="" %}
 and (tc.name ilike '%' || ?keyword || '%'  or CnFirstChar(tc.name) ilike '%' || ?keyword || '%' )
{% endif%}
{% if storage_order_status %}
and ta.storage_order_status=?storage_order_status
{% endif%}
and (ta.apply_storage_id in (
select id from T_STORAGE
where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                             inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                             where account_id = ?accot_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?accot_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.apply_storage_id in (select id from T_STORAGE
                   where CUSTOMER_ID in ( select c.id from t_account_child_customer acc
                                                inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                where account_id = ?accot_id) and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?accot_id) ))
and ta.STORAGE_ACTION_TYPE_ID in ('1','7','8')
GROUP BY ta.id
order by cast(ta.id as integer) desc
limit ?page_size offset (?page_num - 1) * ?page_size





[[query.apply.order.cnt]]
with tmp as(
select  count(1) cnt
from T_STORAGE_ORDER ta left JOIN  T_STORAGE_ORDER_DETAIL tb
on ta.id=tb.STORAGE_ORDER_ID and tb.status= 1
LEFT JOIN T_GOODS tc on tc.id=tb.GOODS_ID
where 1=1
      {% if keyword!="" %}
       and (tc.name ilike '%' || ?keyword || '%'  or CnFirstChar(tc.name) ilike '%' || ?keyword || '%' )
      {% endif%}
      {% if storage_order_status %}
      and ta.storage_order_status=?storage_order_status
      {% endif%}
and (ta.apply_storage_id in (
      select id from T_STORAGE
      where CUSTOMER_ID in (select c.id from t_account_child_customer acc
                                                                  inner join t_customer c on c.status != 3  and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                  where acc.account_id=?accot_id
                                                                  )
      and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?accot_id
      and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
      )
      or ta.apply_storage_id in (select id from T_STORAGE
                where CUSTOMER_ID in (select c.id from t_account_child_customer acc
                                        inner join t_customer c on c.status != 3 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                        where acc.account_id=?accot_id
                                        )
                and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?accot_id) ))
and ta.STORAGE_ACTION_TYPE_ID in ('1','7','8')
 GROUP BY ta.id
 )
 	SELECT count(1) cnt FROM tmp




[[query.apply.order.list]]
select
ROW_NUMBER() over(ORDER BY ta.id) row_num,
ta.storage_order_sub_no,ta.apply_storage_id,ta.id as storage_order_id,
ta.storage_order_no,
ta.memo,
tcg.name category_name,
tsf.name specification_name,
u1.name require_unit_name,u2.name unit_name,
ta.CREATE_TIME,
  (SELECT   CASE WHEN storage_order_status_bef =0 AND storage_order_status_aft = 1 THEN a.name||' '||  '创建订单'
		   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 1 THEN a.name||' '||  '修改订单'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 1 THEN a.name||' '||'撤回订单'
		   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 2 THEN a.name||' '||'提交订单'
		   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 3 THEN a.name||' '||'异地采购提交订单'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 3 THEN a.name||' '||'转发中心'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 12 THEN a.name||' '|| '导入采购网站'
		   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 5 THEN a.name||' '||'中心派单'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 2 THEN a.name||' '||'拆分订单'
		   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 3 THEN a.name||' '||'中心拆分订单'
		   WHEN storage_order_status_bef =5 AND storage_order_status_aft = 7 THEN a.name||' '||'调拨派单'
		   WHEN storage_order_status_bef =7 AND storage_order_status_aft = 5 THEN a.name||' '||'无货退回'
		   WHEN storage_order_status_bef =7 AND storage_order_status_aft = 8 THEN a.name||' '||'调拨出库'
		   WHEN storage_order_status_bef =8 AND storage_order_status_aft = 11 THEN a.name||' '||'调拨入库'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 13 THEN a.name||' '||'拒绝请购'
		   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 13 THEN a.name||' '||'拒绝调拨'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 14 THEN a.name||' '||'采购完成'
           WHEN storage_order_status_bef =14 AND storage_order_status_aft = 15 THEN a.name||' '||'创建入库单'
		   ELSE '错误' END last_pursue FROM t_storage_order_log sol
      INNER JOIN t_account a ON a.id = ta.update_account_id
      WHERE sol.storage_order_id = ta.id  ORDER BY sol.create_time DESC LIMIT  1)  last_pursue,
CASE
WHEN ta.storage_order_status = 1 THEN '待提交'
WHEN ta.storage_order_status = 2 THEN '待审核'
WHEN ta.storage_order_status = 3 THEN '待中心审核'
WHEN ta.storage_order_status = 5 THEN '待仓库调拨'
WHEN ta.storage_order_status = 7 THEN '待出库'
WHEN ta.storage_order_status = 8 THEN '待入库'
WHEN ta.storage_order_status = 11 THEN '已完成'
WHEN ta.storage_order_status = 12 THEN '采购已完成'
WHEN ta.storage_order_status = 13 THEN '已关闭'
WHEN ta.storage_order_status = 14 THEN '采购已完成'
WHEN ta.storage_order_status = 15 THEN '采购已完成'
ELSE '已审核' END storage_order_status_desc,
CASE WHEN ta.storage_order_status = 1 THEN 1
WHEN ta.storage_order_status = 2 and ta.is_ratitied = 2  THEN 2
ELSE 3 END operate_status,
  to_char(tb.require_arrive_time,'YYYY-MM-DD') require_arrive_time,
(select name from T_STORAGE   where ID=ta.APPLY_STORAGE_ID) apply_storage_name,
(select name from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE   where ID=ta.APPLY_STORAGE_ID))  apply_customer_name,
(select name from T_CUSTOMER where id=(select parent_customer_id from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE   where ID=ta.APPLY_STORAGE_ID)) ) apply_parent_customer_name,
    (select name  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.TO_STORAGE_ID)) to_customer_name,
    (select name from T_CUSTOMER where id=(select parent_customer_id  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.TO_STORAGE_ID))) to_parent_customer_name,
    (select NAME from T_STORAGE  where ID=ta.TO_STORAGE_ID) to_storage_name,
    (select name  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.FROM_STORAGE_ID)) from_customer_name,
    (select name from T_CUSTOMER where id=(select parent_customer_id  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.FROM_STORAGE_ID))) from_parent_customer_name,
    (select NAME from T_STORAGE  where ID=ta.FROM_STORAGE_ID) from_storage_name,
     go.name goods_name,go.goods_code  goods_code,pca.id cate_lv1_id,pca.name cate_lv1_name,
        tb.require_amount require_amount,go.unit unit,go.main_pic_url main_pic_url ,
        pca.id storage_action_type_id,pca.name storage_action_type_desc,
        tb.memo detail_memo

from T_STORAGE_ORDER ta left JOIN  T_STORAGE_ORDER_DETAIL tb
on ta.id=tb.STORAGE_ORDER_ID and tb.status=1
LEFT JOIN T_GOODS tc on tc.id=tb.GOODS_ID
LEFT JOIN t_goods go on go.id=tb.goods_id
LEFT JOIN t_product_category pca on pca.id=go.cate_lv1_id
LEFT JOIN t_category tcg on tcg.id = tb.category_id
LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
LEFT JOIN t_unit u1 on u1.id = tb.require_unit_id
LEFT JOIN t_unit u2 on u2.id = tb.unit_id
where 1=1
{% if keyword!="" %}
 and (tc.name ilike '%' || ?keyword || '%'  or CnFirstChar(tc.name) ilike '%' || ?keyword || '%' )
{% endif%}
{% if storage_order_status %}
and ta.storage_order_status=?storage_order_status
{% endif%}
and (ta.apply_storage_id in (
select id from T_STORAGE
where CUSTOMER_ID in (select c.id from t_account_child_customer acc
                    inner join t_customer c on c.status != 3 and  ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                  where acc.account_id=?accot_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?accot_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.apply_storage_id in (select id from T_STORAGE
                   where CUSTOMER_ID in (select c.id from t_account_child_customer acc
                     inner join t_customer c on c.status != 3 and  ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                      where acc.account_id=?accot_id) and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?accot_id) ))
and ta.STORAGE_ACTION_TYPE_ID in ('1','7','8')
order by cast(ta.id as integer) desc
limit ?page_size offset (?page_num - 1) * ?page_size






        [[query.tstorage.order.detall.list]]
                select
                ROW_NUMBER() over(ORDER BY ta.id) row_num,
                ta.id as storage_order_detall_id,tb.MAIN_PIC_URL,tb.name as  goods_name,tc.name as product_name,
                (select NAME from T_PRODUCT_CATEGORY where tb.cate_lv1_id=id) as cate_lv1_name ,
                (select NAME from T_PRODUCT_CATEGORY where tb.cate_lv2_id=id) as  cate_lv2_name ,
                ta.require_amount,tb.UNIT,ta.PRICE,
                ta.require_arrive_time
                from T_STORAGE_ORDER_DETAIL ta
                left JOIN T_GOODS tb on ta.goods_id=tb.id
                LEFT JOIN T_PRODUCT tc on tc.id=tb.prd_id
                where  ta.STORAGE_ORDER_ID=?storage_order_id and ta.STATUS=1
                order by cast(ta.id as integer) desc


        [[query.tstorage.order.detall.cnt]]
                        select count(1) cnt
                        from T_STORAGE_ORDER_DETAIL ta
                        left JOIN T_GOODS tb on ta.goods_id=tb.id
                        LEFT JOIN T_PRODUCT tc on tc.id=tb.prd_id
                        where  ta.STORAGE_ORDER_ID=?storage_order_id and ta.STATUS=1

[[query.storage.order.by.cus.manage.cnt]]
WITH tmp as(
  SELECT
  tso.id,
  tso.storage_order_no
  FROM t_storage_order tso
INNER JOIN t_storage ts on ts.id = tso.apply_storage_id
INNER JOIN t_customer tc on tc.id = ts.customer_id AND tc.id in ( select c.id from t_account_child_customer acc
                                                                        inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                        where account_id = ?account_id)
WHERE (storage_action_type_id = '1' or storage_action_type_id = '8' ) and tso.storage_order_status != '1'
{% if type!= 0 %}
  and tso.storage_order_status=?type
{% endif%}
{% if keyword != "" %}
  and tso.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}
GROUP BY tso.id ORDER BY tso.create_time DESC
)
SELECT count(1) cnt from tmp





[[query.storage.order.by.cus.manage.list]]
WITH tmp as(
  SELECT
  tso.id storage_order_id,
  tso.storage_order_no,
  tso.storage_order_sub_no,
  tso.storage_action_type_id,
  tso.create_account_id,
  tso.apply_storage_id,
  tso.from_customer_id,
  tso.from_storage_id,
  tso.to_storage_id,
  tso.create_time,
  tso.memo,
  tso.is_ratitied,
  CASE WHEN tso.is_ratitied = 2 THEN '无'
  WHEN tso.is_ratitied = 1 THEN '已批量'
  WHEN tso.is_ratitied = 3 THEN '待批量'
  else '错误' end is_ratitied_desc,
  tso.storage_order_status
  FROM t_storage_order tso
INNER JOIN t_storage ts on ts.id = tso.apply_storage_id
INNER JOIN t_customer tc on tc.id = ts.customer_id AND tc.id in ( select c.id from t_account_child_customer acc
                                                                        inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                        where account_id = ?account_id)
WHERE  (storage_action_type_id = '1' or storage_action_type_id = '8' )  and tso.storage_order_status != '1'
{% if type!= 0 %}
  and tso.storage_order_status=?type
{% endif%}
{% if keyword != "" %}
   and tso.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}
GROUP BY tso.id ORDER BY tso.create_time DESC
)
SELECT t.*,ta.name apply_account_name,tc.name apply_customer_name,ts.name apply_storage_name,
ts1.name from_storage_name,tc1.name from_customer_name,
ts2.name to_storage_name,tc2.name to_customer_name,
CASE WHEN t.storage_order_status = 2 THEN '待审核'
     WHEN t.storage_order_status = 3 THEN '待中心审核'
     WHEN t.storage_order_status = 5 THEN '待仓库调拨'
     WHEN t.storage_order_status = 7 THEN '待出库'
     WHEN t.storage_order_status = 8 THEN '待入库'
     WHEN t.storage_order_status = 11 THEN '已完成'
     WHEN t.storage_order_status = 12 THEN '采购已完成'
     WHEN t.storage_order_status = 13 THEN '已关闭'
     WHEN t.storage_order_status = 14 THEN '采购已完成'
     WHEN t.storage_order_status = 15 THEN '采购已完成'
      ELSE '未知' END storage_order_status_desc,
      CASE WHEN t.storage_order_status = 2 and (t.is_ratitied = 1 or t.is_ratitied = 2) THEN 1
            ELSE 2 END operate_status,
CASE WHEN t.storage_action_type_id = '1' THEN '异地调拨'
WHEN t.storage_action_type_id = '8' THEN '采购'
     ELSE '未确定' END storage_action_type_desc
FROM tmp t
INNER JOIN t_account ta ON ta.id=t.create_account_id
INNER JOIN t_storage ts on ts.id = t.apply_storage_id
INNER JOIN t_customer tc on tc.id = ts.customer_id
left join t_storage ts1 on ts1.id=t.from_storage_id
left JOIN t_customer tc1 on tc1.id = t.FROM_CUSTOMER_ID
left join t_storage ts2 on ts2.id=t.to_storage_id
left JOIN t_customer tc2 on tc2.id = ts2.CUSTOMER_ID
ORDER BY t.create_time DESC
limit ?page_size offset (?page_num - 1) * ?page_size




[[query.apply.order.by.cus.manage.list]]
  WITH itemto as(
SELECT string_agg(CASE WHEN sa.id ='0' then s.name else sa.supplier_alias_name end,',') supplier_names,cpc.goods_id,cpc.customer_id,cpc.unit_id FROM t_cust_price_config cpc
INNER JOIN t_supplier s ON s.id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][1:1]) AND s.status = 1
LEFT JOIN (
              SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
              SELECT '0','','',1
                    ) sa ON sa.id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][2:2]) AND sa.status = 1
WHERE exists(SELECT id FROM t_supplier_goods_config  WHERE supplier_id = s.id AND cpc.goods_id = goods_id AND status = 1)
GROUP BY cpc.goods_id,cpc.customer_id,cpc.unit_id
)
SELECT
  t.id storage_order_id,
  sode.id storage_order_detail_id,
  t.storage_order_no,
  t.storage_order_sub_no,
  t.storage_action_type_id,
  t.create_account_id,
  t.apply_storage_id,
  t.from_customer_id,
  t.from_storage_id,
  t.to_storage_id,
  t.create_time,
  t.memo,
  tcg.name category_name,
  tsf.name specification_name,
  t.is_ratitied,
  CASE WHEN t.is_ratitied = 2 THEN '无'
  WHEN t.is_ratitied = 1 and t.storage_order_status = 6 THEN '已拒绝'
   WHEN t.is_ratitied = 1 and t.storage_order_status = 2 THEN '已批量'
  WHEN t.is_ratitied = 3 THEN '待批量'
  else '错误' end is_ratitied_desc,
  t.storage_order_status,
  it.supplier_names supplier_name,
    sode.need_ratity_amount,
  u1.name require_unit_name,
  u2.name unit_name,
  ta.name apply_account_name,tc.name apply_customer_name,ts.name apply_storage_name,
ts2.name to_storage_name,tc2.name to_customer_name,
CASE WHEN t.storage_order_status = 2 THEN '待审核'
     WHEN t.storage_order_status = 3 THEN '待中心审核'
     WHEN t.storage_order_status = 5 THEN '待仓库调拨'
     WHEN t.storage_order_status = 6 THEN '中心拒绝批量'
     WHEN t.storage_order_status = 7 THEN '待出库'
     WHEN t.storage_order_status = 8 THEN '待入库'
     WHEN t.storage_order_status = 11 THEN '已完成'
     WHEN t.storage_order_status = 12 THEN '采购已完成'
     WHEN t.storage_order_status = 13 THEN '已关闭'
     WHEN t.storage_order_status = 14 THEN '采购已完成'
     WHEN t.storage_order_status = 15 THEN '采购已完成'
      ELSE '未知' END storage_order_status_desc,
      CASE WHEN t.storage_order_status = 2 and (t.is_ratitied = 1 or t.is_ratitied = 2) and it.supplier_names notnull THEN 1
            WHEN it.supplier_names isnull then 2
            ELSE 3 END operate_status,
    CASE WHEN t.storage_action_type_id = '1' THEN '异地调拨'
    WHEN t.storage_action_type_id = '8' THEN '采购'
     ELSE '未确定' END storage_action_type_desc,
       go.name goods_name,go.goods_code goods_code,pca.id cate_lv1_id,pca.name cate_lv1_id_name,
       sode.require_amount require_amount,go.unit unit,sode.require_arrive_time,
       go.id goods_id,sode.memo detail_memo,  sode.need_ratity_amount need_ratity_amountt
FROM t_storage_order t
INNER JOIN t_storage_order_detail sode on  sode.status=1 and sode.storage_order_id=t.id
INNER JOIN t_storage ts on ts.id = t.apply_storage_id AND ts.customer_id in (select c.id from t_account_child_customer acc
                                                                                    inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                                    where account_id = ?account_id
)
left join itemto it on it.goods_id=sode.goods_id and it.customer_id=ts.customer_id and it.unit_id = sode.require_unit_id
INNER JOIN t_customer tc on tc.id = ts.customer_id
left JOIN t_account ta ON ta.id=t.create_account_id
left join t_storage ts2 on ts2.id=t.to_storage_id
left JOIN t_customer tc2 on tc2.id = ts2.CUSTOMER_ID
LEFT JOIN t_goods  go on sode.goods_id=go.id
LEFT JOIN t_product_category pca on go.cate_lv1_id=pca.id and pca.status=1
LEFT JOIN t_category tcg on tcg.id = sode.category_id
LEFT JOIN t_specification tsf on tsf.id = sode.specification_id
LEFT JOIN t_unit u1 on u1.id = sode.require_unit_id
left join t_unit u2 on u2.id = sode.unit_id
 where t.storage_action_type_id = '1'   and t.storage_order_status in (2,6)
 {% if keyword!="" %}
   and t.storage_order_no ilike '%'||?keyword||'%'
 {% endif%}
ORDER BY cast(go.id as integer) DESC,sode.need_ratity_amount








[[query.apply.order.by.cus.manage.group]]
SELECT
go.id goods_id,go.goods_code goods_code,go.name goods_name,sode.need_ratity_amount need_ratity_amountt
FROM t_storage_order t
LEFT JOIN t_storage_order_detail sode on  sode.status=1 and sode.storage_order_id=t.id
left JOIN t_storage ts on ts.id = t.apply_storage_id
LEFT JOIN t_goods  go on sode.goods_id=go.id and go.status=1
 where t.storage_action_type_id = '1'   and t.storage_order_status = 2
and exists( select c.id from t_account_child_customer acc
                  inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                  where account_id = ?account_id and c.id=ts.customer_id)
 {% if keyword!="" %}
    and t.storage_order_no ilike '%'||?keyword||'%'
  {% endif%}
GROUP BY go.id,sode.need_ratity_amount
ORDER BY cast(go.id as integer) DESC





[[query.storage.order.detail.by.ship.cnt]]
WITH tmp as(
  SELECT
  ROW_NUMBER() over(partition by tso.id ORDER BY tg.id) row_num,
  tsod.require_amount,
  tso.storage_order_status,
  tg.name goods_name,
  tg.id goods_id,
  tg.unit,
  tg.main_pic_url,
  tp.name prd_name,
  tpc1.name cate_lv1_name,
  tpc2.name cate_lv2_name
FROM t_storage_order tso
INNER JOIN t_storage_order_detail tsod ON tsod.storage_order_id=tso.id and tsod.status = 1
INNER JOIN t_goods tg ON tg.id =tsod.goods_id
INNER JOIN t_product tp ON tp.id=tg.prd_id
INNER JOIN t_product_category tpc1 ON tpc1.id=tg.cate_lv1_id
INNER JOIN t_product_category tpc2 ON tpc2.id=tg.cate_lv2_id
WHERE tso.id in ('0'
                {% for storage_order_id in storage_order_ids %}
                 ,'{{storage_order_id}}'
                 {% endfor %}
)
)
SELECT count(1) cnt from tmp

[[query.storage.order.detail.by.ship.list]]
WITH tmp as(
  SELECT
  ROW_NUMBER() over(partition by tso.id ORDER BY tg.id) row_num,
  tso.id storage_order_id,
  tsod.id storage_order_detail_id,
  tso.storage_order_no,
  tso.storage_order_sub_no,
  tso.storage_order_status,
  tg.name goods_name,
  tg.id goods_id,
  tg.unit,
  tg.main_pic_url,
  tp.name prd_name,
  tpc1.name cate_lv1_name,
  tpc2.name cate_lv2_name,
  tso.apply_storage_id,
  tsod.*
FROM t_storage_order tso
INNER JOIN t_storage_order_detail tsod ON tsod.storage_order_id=tso.id and tsod.status = 1
INNER JOIN t_goods tg ON tg.id =tsod.goods_id
INNER JOIN t_product tp ON tp.id=tg.prd_id
INNER JOIN t_product_category tpc1 ON tpc1.id=tg.cate_lv1_id
INNER JOIN t_product_category tpc2 ON tpc2.id=tg.cate_lv2_id
WHERE tso.id in ('0'
                {% for storage_order_id in storage_order_ids %}
                 ,'{{storage_order_id}}'
                 {% endfor %}
)
)
SELECT t.*,'已下单' status_desc,tc.name customer_name,
cpc.price
FROM tmp t
INNER JOIN t_storage ts ON ts.id=t.apply_storage_id
INNER JOIN t_customer tc ON tc.id=ts.customer_id
LEFT JOIN t_cust_price_config cpc on cpc.goods_id = t.goods_id and cpc.customer_id = ts.customer_id and cpc.unit_id = t.unit_id
order by cast(t.row_num as integer )

[[query.storage.order.by.cus.alloction.cnt]]
WITH tmp as(
  SELECT
  tso.id storage_order_id,
  tso.storage_order_no,
  tso.storage_order_sub_no,
  tso.storage_action_type_id,
  tso.create_account_id,
  tso.apply_storage_id,
  tso.to_storage_id,
  tso.FROM_STORAGE_ID,
  (select name  from T_STORAGE where id=tso.from_storage_id) from_storage_name,
  tso.create_time,
  tso.memo,
  tso.update_account_id,
  tso.storage_order_status,
  go.id goods_id,go.name goods_name,go.unit unit,
  pca.id cate_lv1_id,pca.name cate_lv1_name,
    sod.require_amount require_amount,sod.require_arrive_time require_arrive_time
  FROM t_storage_order tso
  LEFT JOIN t_storage_order_detail sod on tso.id=sod.storage_order_id  and sod.status=1
  left join t_goods go on go.id=sod.goods_id and go.status=1
  LEFT JOIN  t_product_category pca on pca.id=go.cate_lv1_id and pca.status=1
     left JOIN t_storage ts on ts.id = tso.apply_storage_id
    LEFT JOIN t_cust_rating_form rafcu on rafcu.customer_id=ts.customer_id and rafcu.status=1
    LEFT JOIN t_rating_form raf on raf.id=rafcu.rating_form_id and raf.is_using=true and raf.status=1
    LEFT JOIN t_rating_form_detail rafde on rafde.rating_form_id=raf.id and rafde.goods_id=sod.goods_id and rafde.status=1
    LEFT JOIN t_rating_form_goods_supplier rafgs on rafgs.rating_form_detail_id=rafde.id and rafgs.status=1 and rafgs.is_default=true
    LEFT JOIN t_supplier supp on supp.id=rafgs.supplier_id and supp.status=1
INNER JOIN t_customer tc on tc.id = tso.from_customer_id AND tc.id in ( select c.id from t_account_child_customer acc
                                                                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                              where account_id = ?account_id)
WHERE  (storage_action_type_id = '1' or  storage_action_type_id = '7')
 ORDER BY tso.create_time DESC
)
SELECT count(1) cnt
FROM tmp t
INNER JOIN t_account ta ON ta.id=t.create_account_id
INNER JOIN t_storage ts on ts.id = t.apply_storage_id
LEFT JOIN t_storage ts1 on ts1.id = t.to_storage_id
LEFT JOIN t_customer tc on tc.id = ts.customer_id
LEFT JOIN t_customer tc1 on tc1.id = ts1.customer_id
LEFT JOIN t_customer tc2 on tc2.id = tc1.parent_customer_id

[[query.storage.order.by.cus.alloction.group.list]]
select go.id goods_id,go.name goods_name
FROM t_storage_order tso
  LEFT JOIN t_storage_order_detail sod on tso.id=sod.storage_order_id  and sod.status=1
  left join t_goods go on go.id=sod.goods_id and go.status=1
  LEFT JOIN  t_product_category pca on pca.id=go.cate_lv1_id and pca.status=1
     left JOIN t_storage ts on ts.id = tso.apply_storage_id
    LEFT JOIN t_cust_rating_form rafcu on rafcu.customer_id=ts.customer_id and rafcu.status=1
    LEFT JOIN t_rating_form raf on raf.id=rafcu.rating_form_id and raf.is_using=true and raf.status=1
    LEFT JOIN t_rating_form_detail rafde on rafde.rating_form_id=raf.id and rafde.goods_id=sod.goods_id and rafde.status=1
    LEFT JOIN t_rating_form_goods_supplier rafgs on rafgs.rating_form_detail_id=rafde.id and rafgs.status=1 and rafgs.is_default=true
    LEFT JOIN t_supplier supp on supp.id=rafgs.supplier_id and supp.status=1
INNER JOIN t_customer tc on tc.id = tso.from_customer_id AND tc.id in ( select c.id from t_account_child_customer acc
                                                                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                              where account_id = ?account_id)
WHERE  (storage_action_type_id = '1' or  storage_action_type_id = '7')
  GROUP BY go.id
 ORDER BY cast(go.id as integer) DESC



[[query.storage.order.by.cus.alloction.list]]
WITH tmp as(
  SELECT
  tso.id storage_order_id,
  tso.storage_order_no,
  tso.storage_order_sub_no,
  tso.storage_action_type_id,
  tso.create_account_id,
  tso.apply_storage_id,
  tso.to_storage_id,
  tso.FROM_STORAGE_ID,
  (select name  from T_STORAGE where id=tso.from_storage_id) from_storage_name,
  tso.create_time,
  tso.memo,
  tso.update_account_id,
  tso.storage_order_status,
  tcg.name category_name,
  tsf.name specification_name,
  u1.name require_unit_name,
  u2.name unit_name,
  go.id goods_id,go.name goods_name,go.goods_code,go.unit unit,
  pca.id cate_lv1_id,pca.name cate_lv1_name,
    sod.require_amount require_amount,sod.require_arrive_time require_arrive_time,
    	sod.memo detail_memo,sod.PRICE
  FROM t_storage_order tso
  LEFT JOIN t_storage_order_detail sod on tso.id=sod.storage_order_id  and sod.status=1
  left join t_goods go on go.id=sod.goods_id
  LEFT JOIN  t_product_category pca on pca.id=go.cate_lv1_id and pca.status=1
     left JOIN t_storage ts on ts.id = tso.apply_storage_id
    LEFT JOIN t_category tcg on tcg.id = sod.category_id
    LEFT JOIN t_specification tsf on tsf.id = sod.specification_id
          LEFT JOIN t_unit u1 on u1.id = sod.require_unit_id
          LEFT JOIN t_unit u2 on u2.id = sod.unit_id
INNER JOIN t_customer tc on tc.id = tso.from_customer_id AND tc.id in ( select c.id from t_account_child_customer acc
                                                                              inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                              where account_id = ?account_id)
left join t_cust_price_config cpc on cpc.unit_id = sod.unit_id and cpc.goods_id=sod.goods_id and cpc.customer_id = tc.id
WHERE  (storage_action_type_id = '1' or  storage_action_type_id = '7')
{% if keyword != "" %}
  and tso.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}
{% if type != 0 %}
  and tso.storage_order_status = ?type
{% endif%}
 ORDER BY cast(go.id as integer) DESC
)
SELECT t.*,ta.name apply_account_name,tc.name apply_customer_name,ts.name apply_storage_name,ts1.name to_storage_name,
t.from_storage_name,
tc1.name to_customer_name,tc2.name to_parent_customer_name,
  (SELECT   CASE WHEN storage_order_status_bef =0 AND storage_order_status_aft = 1 THEN a.name||' '||  '创建订单'
                   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 1 THEN a.name||' '||  '修改订单'
                   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 1 THEN a.name||' '||'撤回订单'
                   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 2 THEN a.name||' '||'提交订单'
                   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 3 THEN a.name||' '||'异地采购提交订单'
                   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 3 THEN a.name||' '||'转发中心'
                   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 12 THEN a.name||' '|| '导入采购网站'
                   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 5 THEN a.name||' '||'中心派单'
                   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 2 THEN a.name||' '||'拆分订单'
                   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 3 THEN a.name||' '||'中心拆分订单'
                   WHEN storage_order_status_bef =5 AND storage_order_status_aft = 7 THEN a.name||' '||'调拨派单'
                   WHEN storage_order_status_bef =7 AND storage_order_status_aft = 5 THEN a.name||' '||'无货退回'
                   WHEN storage_order_status_bef =7 AND storage_order_status_aft = 8 THEN a.name||' '||'调拨出库'
                   WHEN storage_order_status_bef =8 AND storage_order_status_aft = 11 THEN a.name||' '||'调拨入库'
                   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 13 THEN a.name||' '||'拒绝请购'
                   WHEN storage_order_status_bef =5 AND storage_order_status_aft = 13 THEN a.name||' '||'拒绝调拨'
                   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 13 THEN a.name||' '||'拒绝调拨'
                   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 14 THEN a.name||' '||'采购完成'
                   WHEN storage_order_status_bef =14 AND storage_order_status_aft = 15 THEN a.name||' '||'创建入库单'
                   ELSE '错误' END last_pursue FROM t_storage_order_log sol
      INNER JOIN t_account a ON a.id = t.update_account_id
      WHERE sol.storage_order_id = t.storage_order_id  ORDER BY sol.create_time DESC LIMIT  1)  last_pursue,
CASE WHEN t.storage_order_status = 5 THEN '待仓库调拨'
     WHEN t.storage_order_status = 7 THEN '待出库'
     WHEN t.storage_order_status = 8 THEN '待入库'
     WHEN t.storage_order_status = 11 THEN '已完成'
     WHEN t.storage_order_status = 12 THEN '采购已完成'
     WHEN t.storage_order_status = 13 THEN '已关闭'
     WHEN t.storage_order_status = 14 THEN '采购已完成'
     WHEN t.storage_order_status = 15 THEN '采购已完成'
      ELSE '未知' END storage_order_status_desc,
      CASE WHEN t.storage_order_status = 5 THEN 1
          WHEN t.storage_order_status = 6 THEN 3
            ELSE 2 END operate_status,
CASE WHEN t.storage_action_type_id = '1' THEN '异地调拨'
     WHEN t.storage_action_type_id = '7' THEN '异地采购'
     ELSE '未确定' END storage_action_type_desc
FROM tmp t
INNER JOIN t_account ta ON ta.id=t.create_account_id
INNER JOIN t_storage ts on ts.id = t.apply_storage_id
LEFT JOIN t_storage ts1 on ts1.id = t.to_storage_id
LEFT JOIN t_customer tc on tc.id = ts.customer_id
LEFT JOIN t_customer tc1 on tc1.id = ts1.customer_id
LEFT JOIN t_customer tc2 on tc2.id = tc1.parent_customer_id
ORDER BY cast(t.goods_id as integer),cast(t.storage_order_id as integer) DESC




[[query.storage.order.by.cus.alloction.order.cnt]]
WITH tmp as(
with item AS (
  select storage_id,goods_id,sum(STOCK_NUM) stock_num from  T_STORAGE_GOODS_STOCK
  where status=1 and TYPE=1
  GROUP BY storage_id,goods_id
)
  SELECT
  tso.id storage_order_id,
  tso.storage_order_no,
  tso.storage_order_sub_no,
  tso.storage_action_type_id,
  tso.create_account_id,
  tso.apply_storage_id,
  tso.to_storage_id,
  tso.create_time,
  tso.storage_order_status
  FROM t_storage_order tso
   LEFT JOIN t_storage_order_detail tb on tso.id=tb.storage_order_id and tb.status=1
     LEFT JOIN t_goods go on go.id=tb.goods_id
     LEFT JOIN item  sto on sto.goods_id=tb.goods_id and sto.storage_id=tso.from_storage_id
INNER JOIN t_storage ts on ts.id = tso.from_storage_id
 and ( (ts.storage_type_id in (select storage_type_id from t_acct_role_storage_type_priv where account_id=?account_id and role_id = (select id from t_role where role_code='cst_super_warehouse')))
 or
    ((select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id))
 )
INNER JOIN t_customer tc on tc.id = ts.customer_id AND tc.id in ( select c.id from t_account_child_customer acc
                                                                        inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                        where account_id = ?account_id)
WHERE storage_action_type_id in ('1','7')
{% if keyword != "" %}
  and tso.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}
{% if storage_order_status!= 0 %}
  and tso.storage_order_status =?storage_order_status
{% endif%}
ORDER BY tso.create_time DESC
)
SELECT count(1) cnt from tmp

[[query.storage.order.by.cus.alloction.order.list]]
WITH tmp as(
with item AS (
  select storage_id,goods_id,sum(STOCK_NUM) stock_num from  T_STORAGE_GOODS_STOCK
  where status=1 and TYPE=1
  GROUP BY storage_id,goods_id
)
  SELECT
  tso.id storage_order_id,
  tso.storage_order_no,
  tso.storage_order_sub_no,
  tso.storage_action_type_id,
  tso.create_account_id,
  tso.apply_storage_id,
  tso.to_storage_id,
  tso.from_storage_id,
  tso.is_from_rcw,
  tso.is_to_rcw,
  tso.create_time,
  tso.in_time,
  tso.memo,
  tso.out_time,
  tso.storage_order_status,
  go.id goods_id,go.name goods_name,go.goods_code,
  go.unit,
  tcg.name category_name,
  tsf.name specification_name,
  u1.name require_unit_name,
  u2.name unit_name,
    CASE WHEN tb.in_amount = -1 THEN tb.out_amount ELSE tb.in_amount END put_in_amount,
    CASE WHEN tb.out_amount = -1 THEN tb.require_amount ELSE tb.out_amount END put_out_amount,
   tb.require_amount,
   tb.price,
  COALESCE(sto.stock_num,0) stock_num,
  tb.out_amount,tb.in_amount,
  tb.memo detail_memo
  FROM t_storage_order tso
  LEFT JOIN t_storage_order_detail tb on tso.id=tb.storage_order_id and tb.status=1
   LEFT JOIN t_goods go on go.id=tb.goods_id
   LEFT JOIN t_category tcg on tcg.id = tb.category_id
   LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
    LEFT JOIN t_unit u1 on u1.id = tb.require_unit_id
    LEFT JOIN t_unit u2 on u2.id = tb.unit_id
   LEFT JOIN item  sto on sto.goods_id=tb.goods_id and sto.storage_id=tso.from_storage_id
   INNER JOIN t_storage ts on ts.id = tso.from_storage_id
 and ( (ts.storage_type_id in (select storage_type_id from t_acct_role_storage_type_priv where account_id=?account_id and role_id = (select id from t_role where role_code='cst_super_warehouse')))
 or
    ((select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?account_id))
 )
INNER JOIN t_customer tc on tc.id = ts.customer_id AND tc.id in ( select c.id from t_account_child_customer acc
                                                                        inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                        where account_id = ?account_id)
WHERE storage_action_type_id in ('1','7')
{% if keyword != "" %}
  and tso.storage_order_no ilike '%' || ?keyword || '%'
{% endif%}
{% if storage_order_status!= 0 %}
  and tso.storage_order_status =?storage_order_status
{% endif%}
 ORDER BY tso.create_time DESC
)
SELECT t.*,
ta.name apply_account_name,
tc.name apply_customer_name,
ts.name apply_storage_name,
ts1.name to_storage_name,
tc1.name to_customer_name,
tc2.name to_parent_customer_name,
ts2.name from_storage_name,
tc3.name from_customer_name,
tc4.name from_parent_customer_name,
CASE
     WHEN t.storage_order_status = 7 THEN '待出库'
     WHEN t.storage_order_status = 8 THEN '待入库'
     WHEN t.storage_order_status = 11 THEN '已完成'
     WHEN t.storage_order_status = 12 THEN '采购已完成'
     WHEN t.storage_order_status = 13 THEN '已关闭'
     WHEN t.storage_order_status = 14 THEN '采购已完成'
     WHEN t.storage_order_status = 15 THEN '采购已完成'
      ELSE '未知' END storage_order_status_desc,
        (select case when t.out_amount + coalesce(t1.amount,0) = 0 and t1.amount notnull then 1 when  t1.amount isnull and t.is_from_rcw=false then 4 when t.is_from_rcw=true then 3 else 2 end   from  (select sum(sod.out_amount) amount from t_rcw_log rl
                  inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
                  inner join t_storage_order_detail sod on sod.status = 1 and sod.storage_order_id = so1.id
                  where rl.storage_order_id = t.storage_order_id and rl.status = 1 and rl.action_type = 2
                  ) t1) is_rcw,
      CASE WHEN t.storage_order_status = 7 THEN 1
            ELSE 2 END operate_status,
CASE WHEN t.storage_action_type_id = '1' THEN '异地调拨'
WHEN t.storage_action_type_id = '7' THEN '异地采购'
     ELSE '未确定' END storage_action_type_desc
FROM tmp t
INNER JOIN t_account ta ON ta.id=t.create_account_id
INNER JOIN t_storage ts on ts.id = t.apply_storage_id
LEFT JOIN t_storage ts1 on ts1.id = t.to_storage_id
LEFT  JOIN t_storage ts2 on ts2.id = t.from_storage_id
LEFT JOIN t_customer tc on tc.id = ts.customer_id
LEFT JOIN t_customer tc1 on tc1.id = ts1.customer_id
LEFT JOIN t_customer tc2 on tc2.id = tc1.parent_customer_id
LEFT JOIN t_customer tc3 on tc3.id = ts2.customer_id
LEFT JOIN t_customer tc4 on tc4.id = tc3.parent_customer_id
ORDER BY cast(t.storage_order_id as integer) DESC
limit ?page_size offset (?page_num - 1) * ?page_size

[[query.storage.order.and.details.list]]
select
  ROW_NUMBER() over(ORDER BY sod.id) row_num,
  so.id storage_order_id,
  sod.id storage_order_detail_id,
  so.storage_order_no,
  so.storage_order_sub_no,
  so.apply_storage_id,
  s1.name apply_storage_name,
  so.from_storage_id,
  s2.name from_storage_name,
  so.to_storage_id,
  s3.name to_storage_name,
  so.from_customer_id,
  c1.name from_customer_name,
  c1.parent_customer_id from_parent_customer_id,
  c2.name from_parent_customer_name,
  so.out_time,
  so.in_time,
  so.storage_action_type_id,
  sat.name storage_action_type_name,
  so.storage_order_status,
  CASE WHEN so.storage_order_status = 1 THEN '未提交'
    WHEN so.storage_order_status = 2 THEN '待审核'
    WHEN so.storage_order_status = 3 THEN '待中心审核'
    WHEN so.storage_order_status = 5 THEN '待仓库调拨'
    WHEN so.storage_order_status = 7 THEN '待出库'
    WHEN so.storage_order_status = 8 THEN '待入库'
    WHEN so.storage_order_status = 11 THEN '已完成'
    WHEN so.storage_order_status = 12 THEN '采购已完成'
    WHEN so.storage_order_status = 13 THEN '已关闭'
    WHEN so.storage_order_status = 14 THEN '采购已完成'
    WHEN so.storage_order_status = 15 THEN '采购已完成'
    ELSE '未知' END storage_order_status_desc,
  sod.goods_id,
  case when sod.type = 1 then g.name
    else g.name || '(' || gz.regenerant_names || '' || ')' end goods_name,
  g.goods_code,
  g.main_pic_url,
  sod.require_amount,
  sod.out_amount,
  sod.in_amount,
  sod.price,
  g.unit,
  g.cate_lv1_id,
  pc1.name cate_lv1_name,
  g.cate_lv2_id,
  pc2.name cate_lv2_name,
  g.prd_id,
  p.name prd_name,
  sod.create_time
from t_storage_order so
left join t_storage_order_detail sod on sod.storage_order_id = so.id and sod.status = 1
left join t_storage s1 on s1.id = so.apply_storage_id
left join t_storage s2 on s2.id = so.from_storage_id
left join t_storage s3 on s3.id = so.to_storage_id
left join t_customer c1 on c1.id = so.from_customer_id
left join t_customer c2 on c2.id = c1.parent_customer_id
left join t_storage_action_type sat on sat.id = so.storage_action_type_id
left join t_goods g on g.id = sod.goods_id
LEFT JOIN (
  select string_agg(z.regenerant_name, ',') as regenerant_names, z.goods_id
  from (
    select gr.goods_id ,r.name regenerant_name
    from t_goods_regenerant gr
    left join t_regenerant r on gr.regenerant_id = r.id
  ) z group by z.goods_id
) gz ON gz.goods_id = sod.goods_id
left join t_product_category pc1 on pc1.id = g.cate_lv1_id
left join t_product_category pc2 on pc2.id = g.cate_lv2_id
left join t_product p on p.id = g.prd_id
where so.id in ('0'
   {% for storage_order_id in storage_order_ids %}
    ,'{{storage_order_id}}'
    {% endfor %}
)

[[query.storage.order.by.ratited.manamge.cnt]]
select count(1) cnt
from t_storage_order so
     LEFT JOIN t_storage_order_detail sod on sod.storage_order_id=so.id and sod.status=1
    LEFT JOIN t_goods go on go.id = sod.goods_id and go.status=1
    LEFT JOIN t_product_category pca on pca.id=go.cate_lv1_id and pca.status=1
    left JOIN t_storage ts on ts.id = so.apply_storage_id
    LEFT JOIN t_cust_price_config cpc on cpc.unit_id = sod.require_unit_id and cpc.goods_id = sod.goods_id and cpc.customer_id = ts.customer_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s3.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
where so.storage_action_type_id = '1' AND so.is_ratitied = 3 and so.storage_order_status=2
    {% if !start_time.IsZero() %}
    and so.create_time>=to_date(?start_time,'YYYY-MM-DD')
    {% endif%}
    {% if !end_time.IsZero() %}
    and so.create_time<=to_date(?end_time,'YYYY-MM-DD')  and so.create_time !=to_date('0001-01-01','YYYY-MM-DD')
    {% endif%}
     {% if is_ratitied != "" && is_ratitied %}
     AND so.is_ratitied=?is_ratitied
    {% endif%}
    {% if keyword!="" %}
    and (so.storage_order_no ilike '%'||?keyword||'%' or c.name ilike '%'||?keyword||'%' )
    {% endif%}

[[query.storage.order.by.ratited.manamge.list]]
select so.*,
    so.id storage_order_id,
    sod.id storage_order_detail_id,
    tcg.name category_name,
    tsf.name specification_name,
    u1.name require_unit_name,
    u2.name unit_name,
    s3.name apply_storage_name,
    c.name apply_customer_name,
    c2.name apply_parent_customer_name,
    s2.name from_storage_name,
    s.name to_storage_name,
    c.id customer_id,
    c2.id parent_customer_id,
    c2.name parent_customer_name,
    sat.name storage_action_type_desc,
    mp.meta_desc storage_order_status_desc,
    (SELECT count(goods_id)  FROM  t_storage_order_detail sod WHERE sod.storage_order_id=so.id AND sod.status = 1) count,
    case so.is_ratitied when 1 then '已审核' when 3 then '待审核'  else '未知' end ratitied_status_desc,
      case so.is_ratitied when 3 then 1 else 2 end operate_status,
     go.id goods_id,go.name goods_name,go.goods_code goods_code,go.cate_lv1_id cate_lv1_id,pca.name cate_lv1_name,
     sod.require_amount require_amount,go.unit unit,sod.require_arrive_time require_arrive_time,so.is_ratitied,
     CASE
      WHEN so.is_ratitied = 1  THEN '已批量'
       WHEN so.is_ratitied = 2  THEN '不需要批量'
       else '待批量' end is_ratitied_desc,
       (select string_agg(case when sa.id !='0' then s.name else sa.supplier_alias_name end,',') from t_supplier s
       left join (
                     SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
                     SELECT '0','','',1
                           ) sa on sa.id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][2:2]) and sa.status =1
       where  s.id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][1:1]) and s.status = 1 ) supplier_name,
       sod.memo detail_memo
from t_storage_order so
    LEFT JOIN t_storage_order_detail sod on sod.storage_order_id=so.id and sod.status=1
    LEFT JOIN t_goods go on go.id = sod.goods_id and go.status=1
    LEFT JOIN t_product_category pca on pca.id=go.cate_lv1_id and pca.status=1
    left JOIN t_storage ts on ts.id = so.apply_storage_id
    LEFT JOIN t_cust_price_config cpc on cpc.unit_id = sod.require_unit_id and cpc.goods_id = sod.goods_id and cpc.customer_id = ts.customer_id
    left join t_storage s3 on so.apply_storage_id = s3.id and s3.status = 1
    left join t_storage s2 on so.from_storage_id = s2.id and s2.status = 1
    left join t_storage s on so.to_storage_id = s.id and s.status = 1
    left join t_customer c on c.id = s3.customer_id
    left join t_customer c2 on c.parent_customer_id = c2.id
    left join t_customer c3 on so.from_customer_id = c3.id
    left join t_storage_action_type sat on so.storage_action_type_id = sat.id
    left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
    LEFT JOIN t_category tcg on tcg.id = sod.category_id
    LEFT JOIN t_specification tsf on tsf.id = sod.specification_id
    LEFT JOIN t_unit u1 on u1.id = sod.require_unit_id
    LEFT JOIN t_unit u2 on u2.id = sod.unit_id
where so.storage_action_type_id = '1' AND so.is_ratitied = 3 and so.storage_order_status=2
     {% if !start_time.IsZero() %}
     and so.create_time>=to_date(?start_time,'YYYY-MM-DD')
     {% endif%}
     {% if !end_time.IsZero() %}
     and so.create_time<=to_date(?end_time,'YYYY-MM-DD') and so.create_time !=to_date('0001-01-01','YYYY-MM-DD')
     {% endif%}
     {% if is_ratitied != "" && is_ratitied %}
     AND so.is_ratitied=?is_ratitied
    {% endif%}
    {% if keyword!="" %}
    and (so.storage_order_no ilike '%'||?keyword||'%' or c.name ilike '%'||?keyword||'%' )
    {% endif%}
order by cast(sod.goods_id as integer) ,so.create_time



[[query.storage.order.by.ratited.manamge.group.list]]
select go.id goods_id,go.name goods_name from t_storage_order  so
LEFT JOIN  t_storage_order_detail sod on so.id=sod.storage_order_id and sod.status = 1
left join t_goods go on  go.id=sod.goods_id and go.status=1
    left JOIN t_storage ts on ts.id = so.apply_storage_id
    LEFT JOIN t_cust_rating_form rafcu on rafcu.customer_id=ts.customer_id and rafcu.status=1
    LEFT JOIN t_rating_form raf on raf.id=rafcu.rating_form_id and raf.is_using=true and raf.status=1
    LEFT JOIN t_rating_form_detail rafde on rafde.rating_form_id=raf.id and rafde.goods_id=sod.goods_id and rafde.status=1
    LEFT JOIN t_rating_form_goods_supplier rafgs on rafgs.rating_form_detail_id=rafde.id and rafgs.status=1 and rafgs.is_default=true
    LEFT JOIN t_supplier supp on supp.id=rafgs.supplier_id and supp.status=1
where so.storage_action_type_id = '1' AND so.is_ratitied = 3 and so.storage_order_status=2
GROUP BY go.id
order by cast(go.id as integer) desc



[[goods.by.storage.order.cnt]]
SELECT count(1) cnt
FROM t_storage_order so
INNER JOIN t_storage_order_detail sod ON sod.status = 1 AND sod.storage_order_id = so.id
INNER JOIN t_goods g ON g.id=sod.goods_id
WHERE so.apply_storage_id = ?storage_id AND so.from_supplier_id =?supplier_id AND so.from_supplier_alias_id = ?supplier_alias_id AND so.storage_action_type_id = '8' AND so.storage_order_status = 14
  {% if !start_time.IsZero() %}
     and so.update_time>=to_date(?start_time,'YYYY-MM-DD')
     {% endif%}
     {% if !end_time.IsZero() %}
     and so.update_time<=to_date(?end_time,'YYYY-MM-DD') and so.update_time !=to_date('0001-01-01','YYYY-MM-DD')
     {% endif%}

[[goods.by.storage.order.list]]
SELECT g.id goods_id,
        g.name goods_name,
        g.goods_code,
        g.unit,
       so.id storage_order_id,
    sod.price,
 sod.require_amount amount ,
 tcg.name category_name,
 tsf.name specification_name,
 u1.name require_unit_name,
 u2.name unit_name,
 sod.memo
FROM t_storage_order so
INNER JOIN t_storage_order_detail sod ON sod.status = 1 AND sod.storage_order_id = so.id
INNER JOIN t_goods g ON g.id=sod.goods_id
  LEFT JOIN t_category tcg on tcg.id = sod.category_id
      LEFT JOIN t_specification tsf on tsf.id = sod.specification_id
      LEFT JOIN t_unit u1 on u1.id = sod.require_unit_id
      LEFT JOIN t_unit u2 on u2.id = sod.unit_id
WHERE so.apply_storage_id = ?storage_id AND so.from_supplier_id =?supplier_id AND so.from_supplier_alias_id = ?supplier_alias_id AND so.storage_action_type_id = '8' AND so.storage_order_status = 14
  {% if !start_time.IsZero() %}
     and so.update_time>=to_date(?start_time,'YYYY-MM-DD')
     {% endif%}
     {% if !end_time.IsZero() %}
     and so.update_time<=to_date(?end_time,'YYYY-MM-DD') and so.update_time !=to_date('0001-01-01','YYYY-MM-DD')
     {% endif%}
     order by so.create_time desc

[[check.price.by.storage.order.cnt]]
SELECT count(1) cnt FROM t_storage_order so
INNER JOIN t_storage_order_detail sod ON sod.storage_order_id = so.id AND sod.status = 1 AND  ( sod.price = 0 OR sod.price is null )
WHERE so.id in ('0'
                            {% for storage_order_id in storage_order_ids %}
                             ,'{{storage_order_id}}'
                             {% endfor %}
            )

[[shopping.goods.detail.first]]
SELECT ts.id supplier_id, coalesce(sa.id,'0') supplier_alias_id
FROM t_storage_order so
LEFT JOIN t_storage_order_detail sod ON sod.storage_order_id=so.id AND sod.status = 1
LEFT JOIN t_storage s ON s.id = so.apply_storage_id AND s.customer_id IN (select c.id from t_account_child_customer acc
             inner join t_customer c on c.status != 3 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
             where acc.account_id=?account_id)
left join t_cust_price_config cpc on cpc.customer_id =  s.customer_id  and sod.goods_id = cpc.goods_id and sod.require_unit_id = cpc.unit_id
left join t_supplier ts on ts.id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][1:1]) and ts.status = 1
left join (SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
            SELECT '0','','',1)  sa on sa.id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][2:2]) and sa.status = 1
where so.id = ?storage_order_id
  AND  exists(SELECT id FROM t_supplier_goods_config sgc WHERE  sgc.supplier_id=ts.id AND sgc.goods_id = sod.goods_id AND sgc.status = 1)
    AND  exists(SELECT id FROM t_supplier WHERE id =ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][1:1]) and status = 1)
order by cast (ts.id as integer) limit 1

[[shopping.goods.detail.list]]
with temp as (
      SELECT
        ?supplier_id||'--'||?supplier_alias_id id,
        so.id storage_order_id, so.storage_order_no,so.storage_order_sub_no,s.customer_id,
        c.name customer_name,sod.goods_id,sod.require_amount,so.create_time,cpc.supplier_ids,
        sod.memo,g.name goods_name,g.goods_code,g.unit,g.main_pic_url,
          tcg.name category_name,
          tsf.name specification_name,
            u1.name require_unit_name,
            u2.name unit_name
      FROM t_storage_order so
      LEFT JOIN t_storage_order_detail sod ON sod.storage_order_id = so.id AND sod.status = 1
      LEFT JOIN t_storage s ON s.id = so.apply_storage_id
      left join t_customer c on c.id = s.customer_id
      left join t_goods g on g.id = sod.goods_id
      left join t_cust_price_config cpc on cpc.customer_id = c.id and cpc.goods_id = sod.goods_id and cpc.unit_id = sod.require_unit_id
      and ?supplier_id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][1:1])
      AND ?supplier_alias_id=ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][2:2])
      LEFT JOIN t_category tcg on tcg.id = sod.category_id
      LEFT JOIN t_specification tsf on tsf.id = sod.specification_id
      LEFT JOIN t_unit u1 on u1.id = sod.require_unit_id
      LEFT JOIN t_unit u2 on u2.id = sod.unit_id
      where  so.id in ('0'
        {% for storage_order_id in storage_order_ids %}
          ,'{{storage_order_id}}'
        {% endfor %}
      ) AND  exists(SELECT id FROM t_supplier_goods_config  WHERE  supplier_id=?supplier_id AND goods_id = sod.goods_id AND status = 1)
)
select tm1.*,tm2.supplier_names
from temp tm1
left join (
  select t.storage_order_id,string_agg(case when sa.id ='0' then s.name else sa.supplier_alias_name end,',') supplier_names from temp t
  inner join t_supplier s on s.id = ANY(t.supplier_ids[1:array_length(t.supplier_ids,1)][1:1]) and s.status = 1
  left join (
                SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
                SELECT '0','','',1
                      ) sa on sa.id = ANY(t.supplier_ids[1:array_length(t.supplier_ids,1)][2:2]) and sa.status = 1
  where exists(SELECT id FROM t_supplier_goods_config WHERE supplier_id=s.id AND goods_id = t.goods_id AND status = 1)
   group by storage_order_id
)tm2 on tm1.storage_order_id = tm2.storage_order_id


[[all.shopping.goods.detail.cnt]]
SELECT count(1) cnt
 FROM t_storage_order so
INNER JOIN t_storage_order_detail sod ON sod.storage_order_id=so.id AND sod.status = 1
INNER JOIN t_storage s ON s.id = so.apply_storage_id AND s.customer_id IN ( select c.id from t_account_child_customer acc
                                                                                  inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                                  where account_id = ?account_id)
and ( (sod.need_ratity_amount = 2 and so.is_ratitied = 2 )or( sod.need_ratity_amount=1 and so.is_ratitied = 1))
   {% if customer_id != "" %}
     AND s.customer_id=?customer_id
    {% endif%}
INNER JOIN (SELECT rfd.goods_id,crf.customer_id,rfd.sale_to_customer_price,string_agg(s.name,',') supplier_names,string_agg(s.id,',') supplier_ids FROM t_cust_rating_form crf
INNER JOIN t_rating_form rf ON rf.id = crf.rating_form_id AND rf.is_using = TRUE
INNER JOIN t_rating_form_detail rfd ON rfd.rating_form_id = rf.id AND rfd.status = 1
INNER JOIN t_rating_form_goods_supplier rfgs ON rfgs.rating_form_detail_id =rfd.id AND rfgs.status = 1 AND rfgs.supplier_id = ?supplier_id
INNER JOIN t_supplier_goods_config sgc ON sgc.supplier_id=rfgs.supplier_id AND sgc.goods_id = rfd.goods_id AND sgc.status = 1
INNER JOIN t_supplier s ON s.id = rfgs.supplier_id
WHERE crf.status = 1 AND crf.customer_id in ( select c.id from t_account_child_customer acc
                                                    inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                    where account_id = ?account_id)
 {% if customer_id != "" %}
     AND crf.customer_id=?customer_id
    {% endif%}
GROUP BY rfd.goods_id,crf.customer_id,rfd.sale_to_customer_price) t ON t.goods_id = sod.goods_id AND s.customer_id = t.customer_id
where so.storage_order_status = 2

[[all.shopping.goods.detail.list]]
with tmp as(
SELECT
    so.id storage_order_id,
    so.storage_order_no,
       so.storage_order_sub_no,
       s.customer_id,
       sod.goods_id,
       sod.require_amount,
       ts.id supplier_id,
       cpc.price sale_to_customer_price,
       so.create_time,
       sod.memo,
       cpc.supplier_ids,
       tcg.name category_name,
       tsf.name specification_name,
       u1.name require_unit_name,
       u2.name unit_name
 FROM t_storage_order so
INNER JOIN t_storage_order_detail sod ON sod.storage_order_id=so.id AND sod.status = 1
INNER JOIN t_storage s ON s.id = so.apply_storage_id AND s.customer_id IN ( select c.id from t_account_child_customer acc
                                                                                  inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                                  where account_id = ?account_id)
and ( (sod.need_ratity_amount = 2 and so.is_ratitied = 2 )or( sod.need_ratity_amount=1 and so.is_ratitied = 1))
LEFT JOIN t_cust_price_config cpc on cpc.customer_id = s.customer_id and cpc.goods_id = sod.goods_id and cpc.unit_id = sod.require_unit_id and ?supplier_id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][1:1]) and ?supplier_alias_id =  ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][2:2])
LEFT JOIN t_supplier ts ON ts.id = ?supplier_id AND ts.status = 1 and ts.id =  ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][1:1])
LEFT JOIN t_category tcg on tcg.id = sod.category_id
LEFT JOIN t_specification tsf on tsf.id = sod.specification_id
LEFT JOIN t_unit u1 on u1.id = sod.require_unit_id
LEFT JOIN t_unit u2 on u2.id = sod.unit_id
where so.storage_order_status = 2
     AND exists(SELECT id FROM t_supplier_goods_config WHERE  supplier_id=ts.id AND goods_id = sod.goods_id AND status = 1)
{% if customer_id != "" %}
     AND s.customer_id=?customer_id
    {% endif%}
)
select t.*,c.name customer_name,g.name goods_name,g.goods_code,g.unit,g.main_pic_url,
 t2.supplier_names
 from tmp t
INNER JOIN t_customer c ON c.id = t.customer_id
INNER JOIN t_goods g ON g.id = t.goods_id
LEFT JOIN (
    select t1.storage_order_id,string_agg(case when sa.id ='0' then  ts.name else sa.supplier_alias_name end ,',') supplier_names from tmp t1
    LEFT JOIN t_supplier ts ON ts.status = 1 and ts.id =  ANY(t1.supplier_ids[1:array_length(t1.supplier_ids,1)][1:1])
    LEFT JOIN (
                  SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
                  SELECT '0','','',1
                        ) sa ON sa.status = 1 and sa.id =  ANY(t1.supplier_ids[1:array_length(t1.supplier_ids,1)][2:2])
    LEFT JOIN t_supplier_goods_config  sgc ON  sgc.supplier_id=ts.id AND sgc.goods_id = t1.goods_id AND sgc.status = 1
    GROUP BY t1.storage_order_id
) t2 on t2.storage_order_id = t.storage_order_id

[[get.shopping.goods.for.supplier.cnt]]
WITH tmp as(
  select DISTINCT t.* from (   SELECT DISTINCT to_char(so.update_time,'YYYY-MM-DD') update_time,s.id supplier_id,coalesce(sa.id,'0') supplier_alias_id ,case when so.storage_order_status = 12 then 1 else 2 end as is_joined FROM t_storage_order so
                 INNER JOIN t_storage_order_detail sod ON sod.storage_order_id = so.id AND sod.status = 1
                 INNER JOIN t_supplier s ON s.id = so.from_supplier_id
                 LEFT JOIN  (SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
                             SELECT '0','','',1)  sa ON sa.id = so.from_supplier_alias_id
                 INNER JOIN t_storage ts ON ts.id = so.apply_storage_id and ts.customer_id in ( select c.id from t_account_child_customer acc
                                                                                                      inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                                                      where account_id = ?account_id)
                 WHERE so.storage_action_type_id = '8' )
  t GROUP BY t.is_joined,t.update_time,t.supplier_id,t.supplier_alias_id
)
SELECT count(1) cnt
FROM tmp t
INNER JOIN t_supplier s ON s.id=t.supplier_id
LEFT JOIN  (SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
                                              SELECT '0','','',1)  sa ON sa.id = t.supplier_alias_id
where 1= 1
{% if supplier_id != "" %}
     AND s.id=?supplier_id
{% endif%}
{% if supplier_alias_id != "" %}
     AND sa.id=?supplier_alias_id
{% endif%}
{% if keyword!="" %}
   and (s.name ilike '%'||?keyword||'%' or sa.supplier_alias_name ilike '%'||?keyword||'%')
    {% endif%}
{% if supplier_type !=0 %}
    and t.is_joined = ?supplier_type
    {% endif%}

[[get.shopping.goods.for.supplier.list]]
WITH tmp as(
  select DISTINCT t.* from (   SELECT DISTINCT to_char(so.update_time,'YYYY-MM-DD') update_time,s.id supplier_id,coalesce(sa.id,'0') supplier_alias_id ,case when so.storage_order_status = 12 then 1 else 2 end as is_joined FROM t_storage_order so
                 INNER JOIN t_storage_order_detail sod ON sod.storage_order_id = so.id AND sod.status = 1
                 INNER JOIN t_supplier s ON s.id = so.from_supplier_id
                  LEFT JOIN  (SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
                                              SELECT '0','','',1)  sa ON sa.id = so.from_supplier_alias_id
                 INNER JOIN t_storage ts ON ts.id = so.apply_storage_id and ts.customer_id in ( select c.id from t_account_child_customer acc
                                                                                                      inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                                                      where account_id = ?account_id)
                 WHERE so.storage_action_type_id = '8' )
  t GROUP BY t.is_joined,t.update_time,t.supplier_id,t.supplier_alias_id
)
SELECT t.*,case when sa.id = '0' then s.name else sa.supplier_alias_name end supplier_name,
CASE WHEN t.is_joined = 1 THEN '平台供应商采购下单' ELSE '非平台供应商采购下单' END joined_desc,
CASE WHEN t.is_joined = 1 THEN   (SELECT CASE WHEN t1.cnt=t1.status_1 THEN '待发货'
                               WHEN t1.cnt = t1.status_9 THEN '全部入库'
                                 ELSE '部分入库' END
                               FROM (
                                 SELECT count(1) cnt,sum(case WHEN o.order_status = 1 or o.order_status = 16 then 1 ELSE  0 END ) as status_1,sum(case WHEN o.order_status = 9 OR o.order_status=8 then 1 ELSE  0 END ) as status_9
                               FROM t_storage_order so
                               INNER JOIN t_storage_order_detail sod ON sod.storage_order_id = so.id AND sod.status = 1
                               INNER JOIN t_supplier s ON s.id = so.from_supplier_id
                               LEFT JOIN t_order o ON o.ref_storage_order_detail_id = sod.id
                               INNER JOIN t_storage ts ON ts.id = so.apply_storage_id and ts.customer_id in ( select c.id from t_account_child_customer acc
                                                                                                                    inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                                                                    where account_id =?account_id)
                               LEFT JOIN t_customer c ON c.id = ts.customer_id
                               WHERE so.from_supplier_id = t.supplier_id and  so.from_supplier_alias_id =t.supplier_alias_id and to_char(so.update_time,'YYYY-MM-DD')= t.update_time and so.storage_action_type_id = '8'  and so.storage_order_status = 12
                               ) t1)
                         ELSE (SELECT CASE WHEN t2.cnt = t2.status_14 THEN '待发货'
                                      WHEN t2.cnt = t2.status_15 THEN '全部入库'
                                 ELSE '部分入库' END
                               FROM (
                                   SELECT
                                count(1) cnt,sum(case WHEN so.storage_order_status = 14 then 1 ELSE  0 END ) as status_14,sum(case WHEN so.storage_order_status = 15 then 1 ELSE  0 END ) as status_15
                               FROM t_storage_order so
                               INNER JOIN t_storage_order_detail sod ON sod.storage_order_id = so.id AND sod.status = 1
                               INNER JOIN t_supplier s ON s.id = so.from_supplier_id
                               INNER JOIN t_storage ts ON ts.id = so.apply_storage_id and ts.customer_id in ( select c.id from t_account_child_customer acc
                                                                                                                    inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                                                                    where account_id =?account_id)
                               LEFT JOIN t_customer c ON c.id = ts.customer_id
                               WHERE so.from_supplier_id = t.supplier_id and  so.from_supplier_alias_id =t.supplier_alias_id and to_char(so.update_time,'YYYY-MM-DD')= t.update_time and so.storage_action_type_id = '8'  and so.storage_order_status != 12
                               ) t2) END storage_order_desc
FROM tmp t
INNER JOIN t_supplier s ON s.id=t.supplier_id
LEFT JOIN  (SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
                                              SELECT '0','','',1)  sa ON sa.id = t.supplier_alias_id
WHERE 1 = 1
{% if supplier_id != "" %}
     AND s.id=?supplier_id
{% endif%}
{% if supplier_alias_id != "" %}
     AND sa.id=?supplier_alias_id
{% endif%}
{% if keyword!="" %}
    and (s.name ilike '%'||?keyword||'%' or sa.supplier_alias_name ilike '%'||?keyword||'%')
    {% endif%}
{% if supplier_type !=0 %}
    and t.is_joined = ?supplier_type
    {% endif%}
    order by t.update_time desc,s.id
limit ?page_size offset (?page_num - 1) * ?page_size


[[get.shopping.goods.detail.for.supplier.cnt]]
SELECT count(1) cnt
FROM t_storage_order so
INNER JOIN t_storage_order_detail sod ON sod.storage_order_id = so.id AND sod.status = 1
INNER JOIN t_supplier s ON s.id = so.from_supplier_id
INNER JOIN t_goods g ON g.id = sod.goods_id
INNER JOIN t_storage ts ON ts.id = so.apply_storage_id and ts.customer_id in ( select c.id from t_account_child_customer acc
                                                                                     inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                                     where account_id = ?account_id)
LEFT JOIN t_customer c ON c.id = ts.customer_id
WHERE so.from_supplier_id = ?supplier_id and  so.from_supplier_alias_id = ?supplier_alias_id and to_char(so.update_time,'YYYY-MM-DD')= ?time and so.storage_action_type_id = '8'
{% if is_joined =="1" %}
    and so.storage_order_status = 12
{% endif%}
{% if is_joined =="2" %}
    and so.storage_order_status != 12
{% endif%}


[[get.shopping.goods.detail.for.supplier.list]]
SELECT
   so.id storage_order_id,
   so.storage_order_no,
   so.storage_order_sub_no,
   g.name goods_name,
   g.goods_code,
   g.main_pic_url,
   c.name customer_name,
   c.id customer_id,
   ts.id storage_id,
   ts.name storage_name,
   sod.price,
   sod.require_amount,
   g.unit,
   sod.memo,
   tcg.name category_name,
   tsf.name specification_name,
   u1.name require_unit_name,
   u2.name unit_name,
   to_char(sod.require_arrive_time,'YYYY-MM-DD') require_arrive_time,
   case when so.storage_order_status = 14 then '已下单'
        when so.storage_order_status = 15 then '已入库'
        when so.storage_order_status = 12 then tm.meta_desc
        else '错误' end status_desc
FROM t_storage_order so
INNER JOIN t_storage_order_detail sod ON sod.storage_order_id = so.id AND sod.status = 1
INNER JOIN t_supplier s ON s.id = so.from_supplier_id
INNER JOIN t_goods g ON g.id = sod.goods_id
INNER JOIN t_storage ts ON ts.id = so.apply_storage_id and ts.customer_id in ( select c.id from t_account_child_customer acc
                                                                                     inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                                                                                     where account_id = ?account_id)
LEFT JOIN t_customer c ON c.id = ts.customer_id
LEFT JOIN t_order o ON o.ref_storage_order_detail_id = sod.id
LEFT JOIN t_metadata_map tm ON tm.meta_code='order_status' and tm.meta_val= o.order_status and tm.status = 1
LEFT JOIN t_category tcg on tcg.id = sod.category_id
LEFT JOIN t_specification tsf on tsf.id = sod.specification_id
LEFT JOIN t_unit u1 on u1.id = sod.require_unit_id
LEFT JOIN t_unit u2 on u2.id = sod.unit_id
WHERE
{% if supplier_id !="" %}
so.from_supplier_id = ?supplier_id
{% endif%}
{% if supplier_alias_id != "" %}
and so.from_supplier_alias_id = ?supplier_alias_id
{% endif%}
{% if time !="" %}
and to_char(so.update_time,'YYYY-MM-DD')= ?time
{% endif%}
{% if keyword!="" %}
    and (g.name ilike '%'||?keyword||'%')
{% endif%}
and so.storage_action_type_id = '8'
{% if is_joined =="1" %}
    and so.storage_order_status = 12
{% endif%}
{% if is_joined =="2" %}
    and so.storage_order_status != 12
{% endif%}
order by so.id,sod.id

[[get.allocation.order.by.cus.cnt]]
select count(1) cnt
 from t_storage_order so
inner join t_storage_order_detail sod on sod.storage_order_id = so.id and sod.status = 1 and sod.type = 1
inner join t_account_child_customer acc on acc.account_id = ?account_id
inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
inner join t_storage ts on ts.id = so.apply_storage_id  and c.id = ts.customer_id
inner join t_customer tc on tc.id = ts.customer_id
left join t_storage s1 on s1.id = so.from_storage_id
left join t_customer c1 on c1.id = s1.customer_id
left join t_storage s2 on s2.id = so.to_storage_id
left join t_customer c2 on c2.id = s2.customer_id
left join t_goods g on g.id = sod.goods_id
where so.storage_action_type_id in('1','7')  and so.storage_order_status not in (1,2) and so.is_to_rcw = false and so.is_from_rcw = false
{% if keyword!="" %}
    and (g.name ilike '%'||?keyword||'%'  OR g.goods_code  ilike '%'||?keyword||'%' OR so.storage_order_no  ilike '%'||?keyword||'%')
   {% endif%}
   {% if !out_start_time.IsZero() %}
   and so.out_time>=to_date(?out_start_time,'YYYY-MM-DD')
  {% endif%}
   {% if !out_end_time.IsZero() %}
  and so.out_time<to_date(?out_end_time,'YYYY-MM-DD')+1 and so.out_time != to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
     {% if !in_start_time.IsZero() %}
     and so.in_time>=to_date(?in_start_time,'YYYY-MM-DD')
    {% endif%}
     {% if !in_end_time.IsZero() %}
    and so.in_time<to_date(?in_end_time,'YYYY-MM-DD')+1 and so.in_time != to_date('0001-01-01','YYYY-MM-DD')
    {% endif%}
       {% if storage_order_status !="" && storage_order_status !="0" %}
       and so.storage_order_status = ?storage_order_status
      {% endif%}
         {% if customer_id !="" %}
         and tc.id = ?customer_id
        {% endif%}

[[get.allocation.order.by.cus.list]]
with tmp as(
select
so.id storage_order_id,
so.storage_order_no,
so.storage_order_sub_no,
ts.id apply_storage_id,
ts.name apply_storage_name,
tc.id apply_customer_id,
tc.name apply_customer_name,
s1.id from_storage_id,
s1.name from_storage_name,
c1.id from_customer_id,
c1.name from_customer_name,
s2.id to_storage_id,
s2.name to_storage_name,
c2.id to_customer_id,
c2.name to_customer_name,
g.name goods_name,
g.goods_code,
g.unit,
case when sod.out_amount = -1 and so.storage_order_status != 11 then 0 else sod.out_amount end out_amount,
case when sod.in_amount = -1 and so.storage_order_status != 11 then 0 else sod.in_amount end two_in_amount,
sod.price,
coalesce( (select sum(tsod.in_amount) from t_rcw_log rl
 inner join t_storage_order_detail tsod on tsod.storage_order_id = rl.update_storage_order_id and tsod.status = 1
 where rl.storage_order_id = so.id
 ),0) rcw_in_amount,
case when sod.out_amount = -1 and so.storage_order_status != 11 then 0 else sod.price * sod.out_amount end out_total_price,
sod.memo,
so.out_time,
so.in_time,
sods.not_used_amount just_stock,
tcg.name category_name,
tsf.name specification_name,
u1.name require_unit_name,
u2.name unit_name,
mp.meta_desc storage_order_status_desc
 from t_storage_order so
inner join t_storage_order_detail sod on sod.storage_order_id = so.id and sod.status = 1 and sod.type = 1
inner join t_account_child_customer acc on acc.account_id = ?account_id
inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
inner join t_storage ts on ts.id = so.apply_storage_id  and c.id = ts.customer_id
inner join t_customer tc on tc.id = ts.customer_id
left join t_storage s1 on s1.id = so.from_storage_id
left join t_customer c1 on c1.id = s1.customer_id
left join t_storage s2 on s2.id = so.to_storage_id
left join t_customer c2 on c2.id = s2.customer_id
left join t_goods g on g.id = sod.goods_id
left join t_metadata_map mp on mp.meta_code='storage_order_status' and mp.meta_val=so.storage_order_status
left join t_storage_order_detail_stock sods on sods.storage_order_detail_id = sod.id and sods.status = 1 and sods.type = sod.type
LEFT JOIN t_category tcg on tcg.id = sod.category_id
LEFT JOIN t_specification tsf on tsf.id = sod.specification_id
LEFT JOIN t_unit u1 on u1.id = sod.require_unit_id
LEFT JOIN t_unit u2 on u2.id = sod.unit_id
where so.storage_action_type_id in('1','7')  and so.storage_order_status not in (1,2) and so.is_to_rcw = false and so.is_from_rcw = false
{% if keyword!="" %}
    and (g.name ilike '%'||?keyword||'%'  OR g.goods_code  ilike '%'||?keyword||'%' OR so.storage_order_no  ilike '%'||?keyword||'%')
   {% endif%}
   {% if !out_start_time.IsZero() %}
   and so.out_time>=to_date(?out_start_time,'YYYY-MM-DD')
  {% endif%}
   {% if !out_end_time.IsZero() %}
  and so.out_time<to_date(?out_end_time,'YYYY-MM-DD')+1 and so.out_time != to_date('0001-01-01','YYYY-MM-DD')
  {% endif%}
     {% if !in_start_time.IsZero() %}
     and so.in_time>=to_date(?in_start_time,'YYYY-MM-DD')
    {% endif%}
     {% if !in_end_time.IsZero() %}
    and so.in_time<to_date(?in_end_time,'YYYY-MM-DD')+1 and so.in_time != to_date('0001-01-01','YYYY-MM-DD')
    {% endif%}
       {% if storage_order_status !="" && storage_order_status !="0" %}
       and so.storage_order_status = ?storage_order_status
      {% endif%}
         {% if customer_id !="" %}
         and tc.id = ?customer_id
        {% endif%}
  order by cast(so.id as integer) desc
  limit ?page_size offset (?page_num - 1) * ?page_size
)
select t.*,rcw_in_amount+two_in_amount in_amount,
 (rcw_in_amount+two_in_amount) * t.price in_total_price
 from tmp t
 order by cast(t.storage_order_id as integer) desc


[[query.shopping.storage.order.for.sup.list]]
SELECT
so.id storage_order_id,so.storage_order_no,so.storage_order_sub_no,so.in_time,so.id,so.storage_order_status,
to_char(in_time,'YYYY-MM-DD') in_time_format,to_char(in_time,'YYYYMMDD') in_time_sum,
sod.in_amount,sod.price,sod.memo detail_memo,sod.require_arrive_time,sod.in_amount * sod.price in_total_price,
s.name storage_name,
tc.name customer_name,
ts.id supplier_id,
case when sa.id ='0' then ts.name else sa.supplier_alias_name end  supplier_name,
so.from_supplier_alias_id supplier_alias_id,
g.goods_code,g.name goods_name,g.main_pic_url,
mm.meta_desc storage_order_status_desc,
tcg.name category_name,
tsf.name specification_name,
u1.name unit_name,
case when sod1.id notnull and to_char(sod1.require_arrive_time,'YYYY-MM-DD') != '0001-01-01'   then   sod1.require_arrive_time   else o.order_time end order_time,
(select case when sod.in_amount + coalesce(t.amount,0) = 0 and t.amount notnull then 1 when  t.amount isnull and so.is_to_rcw=false then 4 when so.is_to_rcw=true then 3 else 2 end   from
  (select sum(sod1.in_amount) amount from t_rcw_log rl
         inner join t_storage_order so1 on so1.id = rl.update_storage_order_id
         inner join t_storage_order_detail sod1 on sod1.status = 1 and sod1.storage_order_id = so1.id
         where rl.storage_order_id = so.id and rl.status = 1 and rl.action_type = 1
         ) t) as is_rcw
FROM t_storage_order so
INNER JOIN t_storage_order_detail sod ON sod.storage_order_id = so.id AND sod.status = 1
INNER JOIN t_storage s ON s.id = so.to_storage_id
INNER JOIN t_customer tc ON tc.id = s.customer_id  AND tc.id IN (select c.id from t_account_child_customer acc
                  inner join t_customer c on c.status != 3 and c.leaf = 1 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                  where account_id = ?account_id)
LEFT JOIN t_supplier ts ON ts.id = so.from_supplier_id
LEFT JOIN t_goods g ON g.id = sod.goods_id
LEFT JOIN  t_metadata_map mm on mm.meta_val = so.storage_order_status and mm.meta_code = 'storage_order_status'
LEFT JOIN t_category tcg on tcg.id = sod.category_id
LEFT JOIN t_specification tsf on tsf.id = sod.specification_id
LEFT JOIN t_unit u1 on u1.id = sod.unit_id
LEFT JOIN t_order o on o.id=sod.ref_order_id
LEFT JOIN t_storage_order_detail sod1 on sod1.id=sod.ref_storage_order_detail_id
LEFT JOIN (
              SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
              SELECT '0','','',1
                    ) sa on sa.id=so.from_supplier_alias_id
where  so.storage_action_type_id = '4'
{% if supplier_id!="" %}
   and so.from_supplier_id=?supplier_id
{% endif%}
{% if supplier_alias_id!="" %}
   and so.from_supplier_alias_id=?supplier_alias_id
{% endif%}
{% if is_joined != "0" && is_joined != ""  %}
   and ts.is_joined=?is_joined
{% endif%}
{% if !start_put_in_time.IsZero() %}
and so.in_time>=to_date(?start_put_in_time,'YYYY-MM-DD')
{% endif%}
{% if !end_put_in_time.IsZero() %}
and so.in_time<to_date(?end_put_in_time,'YYYY-MM-DD')+1
{% endif%}
{% if keyword!="" %}
   and  (so.storage_order_no ilike '%' || ?keyword || '%' or g.name ilike '%' || ?keyword || '%' )
{% endif%}
ORDER BY to_char(in_time,'YYYY-MM-DD') DESC ,cast(so.from_supplier_id as INTEGER),cast(so.from_supplier_alias_id as INTEGER),cast(so.id as integer) desc

[[check.supplier.by.storage.order]]
SELECT DISTINCT so.id storage_order_id FROM t_storage_order so
LEFT JOIN t_storage_order_detail sod ON sod.storage_order_id=so.id AND sod.status = 1
LEFT JOIN t_storage s ON s.id = so.apply_storage_id AND s.customer_id IN (select c.id from t_account_child_customer acc
             inner join t_customer c on c.status != 3 and ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
             where acc.account_id=?account_id)
left join t_cust_price_config cpc on cpc.customer_id =  s.customer_id  and sod.goods_id = cpc.goods_id and sod.require_unit_id = cpc.unit_id
left join t_supplier ts on ts.id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][1:1]) and ts.status = 1
left join (SELECT  a.id,a.supplier_alias_name,a.supplier_id,a.status from t_supplier_alias a  UNION
            SELECT '0','','',1)  sa on sa.id = ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][2:2]) and sa.status = 1
WHERE so.id in ('0'
                      {% for storage_order_id in storage_order_ids %}
                        ,'{{storage_order_id}}'
                      {% endfor %}
                    )
 AND  exists(SELECT id FROM t_supplier_goods_config sgc WHERE  sgc.supplier_id=ts.id AND sgc.goods_id = sod.goods_id AND sgc.status = 1)
    AND  exists(SELECT id FROM t_supplier WHERE id =ANY(cpc.supplier_ids[1:array_length(cpc.supplier_ids,1)][1:1]) and status = 1)




[[query.close.order.list]]
select
ROW_NUMBER() over(ORDER BY ta.id desc) row_num,
ta.storage_order_sub_no,ta.apply_storage_id,ta.id as storage_order_id,
ta.storage_order_no,
ta.memo,
tcg.name category_name,
tsf.name specification_name,
u1.name require_unit_name,u2.name unit_name,
ta.CREATE_TIME,
  (SELECT   CASE WHEN storage_order_status_bef =0 AND storage_order_status_aft = 1 THEN a.name||' '||  '创建订单'
		   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 1 THEN a.name||' '||  '修改订单'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 1 THEN a.name||' '||'撤回订单'
		   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 2 THEN a.name||' '||'提交订单'
		   WHEN storage_order_status_bef =1 AND storage_order_status_aft = 3 THEN a.name||' '||'异地采购提交订单'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 3 THEN a.name||' '||'转发中心'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 12 THEN a.name||' '|| '导入采购网站'
		   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 5 THEN a.name||' '||'中心派单'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 2 THEN a.name||' '||'拆分订单'
		   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 3 THEN a.name||' '||'中心拆分订单'
		   WHEN storage_order_status_bef =5 AND storage_order_status_aft = 7 THEN a.name||' '||'调拨派单'
		   WHEN storage_order_status_bef =7 AND storage_order_status_aft = 5 THEN a.name||' '||'无货退回'
		   WHEN storage_order_status_bef =7 AND storage_order_status_aft = 8 THEN a.name||' '||'调拨出库'
		   WHEN storage_order_status_bef =8 AND storage_order_status_aft = 11 THEN a.name||' '||'调拨入库'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 13 THEN a.name||' '||'拒绝请购'
		   WHEN storage_order_status_bef =3 AND storage_order_status_aft = 13 THEN a.name||' '||'拒绝调拨'
		   WHEN storage_order_status_bef =2 AND storage_order_status_aft = 14 THEN a.name||' '||'采购完成'
           WHEN storage_order_status_bef =14 AND storage_order_status_aft = 15 THEN a.name||' '||'创建入库单'
		   ELSE '错误' END last_pursue FROM t_storage_order_log sol
      INNER JOIN t_account a ON a.id = ta.update_account_id
      WHERE sol.storage_order_id = ta.id  ORDER BY sol.create_time DESC LIMIT  1)  last_pursue,
CASE
WHEN ta.storage_order_status = 1 THEN '待提交'
WHEN ta.storage_order_status = 2 THEN '待审核'
WHEN ta.storage_order_status = 3 THEN '待中心审核'
WHEN ta.storage_order_status = 5 THEN '待仓库调拨'
WHEN ta.storage_order_status = 7 THEN '待出库'
WHEN ta.storage_order_status = 8 THEN '待入库'
WHEN ta.storage_order_status = 11 THEN '已完成'
WHEN ta.storage_order_status = 12 THEN '采购已完成'
WHEN ta.storage_order_status = 13 THEN '已关闭'
WHEN ta.storage_order_status = 14 THEN '采购已完成'
WHEN ta.storage_order_status = 15 THEN '采购已完成'
ELSE '已审核' END storage_order_status_desc,
CASE WHEN ta.storage_order_status = 1 THEN 1
WHEN ta.storage_order_status = 2 and ta.is_ratitied = 2  THEN 2
ELSE 3 END operate_status,
  to_char(tb.require_arrive_time,'YYYY-MM-DD') require_arrive_time,
(select name from T_STORAGE   where ID=ta.APPLY_STORAGE_ID) apply_storage_name,
(select name from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE   where ID=ta.APPLY_STORAGE_ID))  apply_customer_name,
(select name from T_CUSTOMER where id=(select parent_customer_id from T_CUSTOMER where id=(select CUSTOMER_ID from T_STORAGE   where ID=ta.APPLY_STORAGE_ID)) ) apply_parent_customer_name,
    (select name  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.TO_STORAGE_ID)) to_customer_name,
    (select name from T_CUSTOMER where id=(select parent_customer_id  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.TO_STORAGE_ID))) to_parent_customer_name,
    (select NAME from T_STORAGE  where ID=ta.TO_STORAGE_ID) to_storage_name,
    (select name  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.FROM_STORAGE_ID)) from_customer_name,
    (select name from T_CUSTOMER where id=(select parent_customer_id  from T_CUSTOMER where ID=(select CUSTOMER_ID from T_STORAGE  where ID=ta.FROM_STORAGE_ID))) from_parent_customer_name,
    (select NAME from T_STORAGE  where ID=ta.FROM_STORAGE_ID) from_storage_name,
     go.name goods_name,go.goods_code  goods_code,pca.id cate_lv1_id,pca.name cate_lv1_name,
        tb.require_amount require_amount,go.unit unit,go.main_pic_url main_pic_url ,
        pca.id storage_action_type_id,pca.name storage_action_type_desc,
        tb.memo detail_memo,
        tb.require_arrive_time require_time,
        ta.update_time close_time,
        (select name from t_category where  id=go.CATEGORY_ID) check_regenerant,
        su.name supplier_name
from T_STORAGE_ORDER ta left JOIN  T_STORAGE_ORDER_DETAIL tb
on ta.id=tb.STORAGE_ORDER_ID and tb.status=1
LEFT JOIN T_GOODS tc on tc.id=tb.GOODS_ID
LEFT JOIN t_goods go on go.id=tb.goods_id
LEFT JOIN t_product_category pca on pca.id=go.cate_lv1_id
LEFT JOIN t_category tcg on tcg.id = tb.category_id
LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
LEFT JOIN t_unit u1 on u1.id = tb.require_unit_id
LEFT JOIN t_unit u2 on u2.id = tb.unit_id
LEFT JOIN t_storage st on st.id = ta.APPLY_STORAGE_ID and st.status=1
left JOIN T_RATING_FORM raf on raf.customer_id=st.customer_id and raf.is_using=true and raf.status=1
LEFT JOIN t_rating_form_detail rafd on rafd.goods_id = go.id and rafd.status=1 and rafd.rating_form_id=raf.id
and rafd.unit_id=tb.unit_id
left join T_RATING_FORM_GOODS_SUPPLIER  rafgs on rafgs.rating_form_detail_id=rafd.id and rafd.status=1
and rafgs.is_default=true
LEFT JOIN t_supplier su on su.id=rafgs.supplier_id and su.status=1
where (ta.apply_storage_id in (
select id from T_STORAGE
where CUSTOMER_ID in (select c.id from t_account_child_customer acc
                    inner join t_customer c on c.status != 3 and  ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                  where acc.account_id=?accot_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?accot_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.apply_storage_id in (select id from T_STORAGE
                   where CUSTOMER_ID in (select c.id from t_account_child_customer acc
                     inner join t_customer c on c.status != 3 and  ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                      where acc.account_id=?accot_id) and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?accot_id) ))
and ta.STORAGE_ACTION_TYPE_ID = '1'
and ta.STORAGE_ORDER_STATUS = '13'
{% if !close_start_value.IsZero() %}
   and to_date(?close_start_value,'YYYY-MM-DD')<ta.update_time
{% endif%}
{% if !close_end_value.IsZero() %}
   and to_date(?close_end_value,'YYYY-MM-DD')>ta.update_time
{% endif%}
{% if !apply_start_value.IsZero() %}
   and to_date(?apply_start_value,'YYYY-MM-DD')<tb.require_arrive_time
{% endif%}
{% if !apply_end_value.IsZero() %}
   and to_date(?apply_end_value,'YYYY-MM-DD')>tb.require_arrive_time
{% endif%}
{% if keyword!="" %}
   and  (go.name ilike '%' || ?keyword || '%' or  go.goods_code ilike '%' || ?keyword || '%' or  ta.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' )
{% endif%}
{% if apply_customer!="" %}
   and  st.customer_id=?apply_customer
{% endif%}
{% if supplierid!="" %}
   and  su.name=?supplierid
{% endif%}
{% if goods_category_id!="" %}
   and  go.category_id=?goods_category_id
{% endif%}
order by cast(ta.id as integer) desc
  limit ?page_size offset (?page_num - 1) * ?page_size








[[query.close.order.cnt]]
select count(1) cnt
from T_STORAGE_ORDER ta left JOIN  T_STORAGE_ORDER_DETAIL tb
on ta.id=tb.STORAGE_ORDER_ID and tb.status=1
LEFT JOIN T_GOODS tc on tc.id=tb.GOODS_ID
LEFT JOIN t_goods go on go.id=tb.goods_id
LEFT JOIN t_product_category pca on pca.id=go.cate_lv1_id
LEFT JOIN t_category tcg on tcg.id = tb.category_id
LEFT JOIN t_specification tsf on tsf.id = tb.specification_id
LEFT JOIN t_unit u1 on u1.id = tb.require_unit_id
LEFT JOIN t_unit u2 on u2.id = tb.unit_id
LEFT JOIN t_storage st on st.id = ta.APPLY_STORAGE_ID and st.status=1
left JOIN T_RATING_FORM raf on raf.customer_id=st.customer_id and raf.is_using=true and raf.status=1
LEFT JOIN t_rating_form_detail rafd on rafd.goods_id = go.id and rafd.status=1 and rafd.rating_form_id=raf.id
and rafd.unit_id=tb.unit_id
left join T_RATING_FORM_GOODS_SUPPLIER  rafgs on rafgs.rating_form_detail_id=rafd.id and rafd.status=1
and rafgs.is_default=true
LEFT JOIN t_supplier su on su.id=rafgs.supplier_id and su.status=1
where (ta.apply_storage_id in (
select id from T_STORAGE
where CUSTOMER_ID in (select c.id from t_account_child_customer acc
                    inner join t_customer c on c.status != 3 and  ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                  where acc.account_id=?accot_id)
and  STORAGE_TYPE_ID in (select  storage_type_id from  t_acct_role_storage_type_priv where account_id=?accot_id
and   role_id = (select id from t_role where role_code='cst_super_warehouse'))
)
or ta.apply_storage_id in (select id from T_STORAGE
                   where CUSTOMER_ID in (select c.id from t_account_child_customer acc
                     inner join t_customer c on c.status != 3 and  ( c.id = acc.customer_id or c.tree_ids like '%,'||acc.customer_id||',%' or  c.tree_ids like '%,'||acc.customer_id or  c.tree_ids like acc.customer_id||',%' or c.tree_ids like acc.customer_id )
                      where acc.account_id=?accot_id) and (select id from t_role where role_code='cst_super_admin') in (select  role_id from  t_acct_role where account_id=?accot_id) ))
and ta.STORAGE_ACTION_TYPE_ID = '1'
and ta.STORAGE_ORDER_STATUS = '13'
{% if !close_start_value.IsZero() %}
   and to_date(?close_start_value,'YYYY-MM-DD')<ta.update_time
{% endif%}
{% if !close_end_value.IsZero() %}
   and to_date(?close_end_value,'YYYY-MM-DD')>ta.update_time
{% endif%}
{% if !apply_start_value.IsZero() %}
   and to_date(?apply_start_value,'YYYY-MM-DD')<tb.require_arrive_time
{% endif%}
{% if !apply_end_value.IsZero() %}
   and to_date(?apply_end_value,'YYYY-MM-DD')>tb.require_arrive_time
{% endif%}
{% if keyword!="" %}
   and  (go.name ilike '%' || ?keyword || '%' or  go.goods_code ilike '%' || ?keyword || '%' or  ta.STORAGE_ORDER_NO ilike '%' || ?keyword || '%' )
{% endif%}
{% if apply_customer!="" %}
   and  st.customer_id=?apply_customer
{% endif%}
{% if supplierid!="" %}
   and  su.name=?supplierid
{% endif%}
{% if goods_category_id!="" %}
   and  go.category_id=?goods_category_id
{% endif%}